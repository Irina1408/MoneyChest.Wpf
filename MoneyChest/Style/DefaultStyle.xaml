<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MoneyChest.Style"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:MaterialDesignTh="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf">

    <!--*********************************** Constants ***********************************-->
    <Thickness x:Key="ControlMargin">5</Thickness>
    <system:Double x:Key="DefaultFontSize">14</system:Double>
    <system:Double x:Key="LargeFontSize">24</system:Double>
    <system:Double x:Key="MiddleFontSize">17</system:Double>
    <system:Double x:Key="SmallFontSize">12</system:Double>
    <system:Double x:Key="ToolBarButtonSize">35</system:Double>
    <system:Double x:Key="TextInputControlWidth">200</system:Double>
    <system:Double x:Key="TextButtonInputControlWidth">165</system:Double>

    <Style TargetType="{x:Type Control}">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <Style x:Key="TextBoxIconStyle" TargetType="{x:Type FrameworkElement}">
        <Setter Property="Margin" Value="0 0 3 -5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TextBoxMultilineIconStyle" TargetType="{x:Type FrameworkElement}">
        <Setter Property="Margin" Value="0 0 3 10"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>
    
    <!--*********************************** Window ***********************************-->
    <Style x:Key="MoneyChestWindowStyle" TargetType="{x:Type controls:MetroWindow}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="GlowBrush" Value="{DynamicResource AccentColorBrush}"/>
        <Setter Property="ShowIconOnTitleBar" Value="True"/>
        <Setter Property="Icon" Value="money.ico"/>
        <Setter Property="Title" Value="Money Chest"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="IconTemplate">
            <Setter.Value>
                <DataTemplate>
                    <controls:MultiFrameImage Width="{TemplateBinding Width}" Margin="5 0 0 0"
                                                      Height="{TemplateBinding Height}"
                                                      MultiFrameImageMode="{Binding IconScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}"
                                                      RenderOptions.BitmapScalingMode="{Binding IconBitmapScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}"
                                                      RenderOptions.EdgeMode="{Binding IconEdgeMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}"
                                                      Source="{TemplateBinding Content}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--*********************************** Button ***********************************-->
    <Style x:Key="MCButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource SquareButtonStyle}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MCButtonStyle}"/>

    <Style x:Key="AccentedButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="IsDefault" Value="True"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
    </Style>

    <Style x:Key="TextBoxButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0 5 5 5"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>

    <Style x:Key="LinkButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextDecorations="Underline">
                <ContentPresenter /></TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CircleButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Metro.Styles.MetroCircleButtonStyle}">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="36"/>
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
    </Style>

    <Style x:Key="CircleToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MahApps.Metro.Styles.MetroCircleToggleButtonStyle}">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="36"/>
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
    </Style>

    <Style x:Key="CircleActionToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignActionToggleButton}">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="36"/>
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}"/>
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
    </Style>

    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MetroRadioButton}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <!--*********************************** Check box ***********************************-->
    <Style x:Key="MCCheckBoxStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MetroCheckBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="Background" Value="Transparent"/>
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="LeftCol" Width="18" />
                            <ColumnDefinition x:Name="RightCol" Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="PART_CHECKBOX">
                            <Rectangle Margin="-6 0" Fill="{DynamicResource TransparentWhiteBrush}" />
                            <Border x:Name="normal"
                                    Width="18"
                                    Height="18"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Path x:Name="checkBox"
                                  Width="12"
                                  Height="10"
                                  Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
                                  Fill="{DynamicResource HighlightBrush}"
                                  Opacity="0"
                                  Stretch="Fill"
                                  UseLayoutRounding="False" />
                            <Rectangle x:Name="IndeterminateCheck"
                                       Width="8"
                                       Height="3"
                                       Fill="{DynamicResource GrayBrush3}"
                                       Opacity="0" />
                            <Border x:Name="disabled"
                                    Width="18"
                                    Height="18"
                                    Background="{DynamicResource SemiTransparentWhiteBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Opacity="0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="contentPresenter"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To=".55"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="disabled"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="checkBox"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateCheck"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="normal" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="normal" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="normal" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.FocusBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter TargetName="checkBox" Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="-1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="controls:ToggleButtonHelper.ContentDirection" Value="RightToLeft">
                            <Setter Property="Padding" Value="0 0 6 0" />
                            <Setter TargetName="LeftCol" Property="Width" Value="*" />
                            <Setter TargetName="PART_CHECKBOX" Property="Grid.Column" Value="1" />
                            <Setter TargetName="RightCol" Property="Width" Value="18" />
                            <Setter TargetName="contentPresenter" Property="Grid.Column" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MCCheckBoxStyle}"/>

    <!--*********************************** Text box ***********************************-->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="{StaticResource TextInputControlWidth}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <Style x:Key="SimpleTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="{StaticResource TextInputControlWidth}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <Style x:Key="HintButtonTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="{StaticResource TextButtonInputControlWidth}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <Style x:Key="HintMultilineTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="{StaticResource TextInputControlWidth}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="MaxHeight" Value="80"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="SpellCheck.IsEnabled" Value="True"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    </Style>
    
    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignFloatingHintPasswordBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="{StaticResource TextInputControlWidth}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <!--*********************************** Calendar ***********************************-->
    <Style x:Key="MCMaterialDesignCalendarItemPortrait" TargetType="{x:Type CalendarItem}" 
           BasedOn="{StaticResource MaterialDesignCalendarItemPortrait}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <SineEase x:Key="EasingFunction" EasingMode="EaseOut"/>
                        <CubicEase x:Key="EasingFunctionIn" EasingMode="EaseIn"/>

                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock Foreground="{DynamicResource MaterialDesignToolTipBackground}"
                                       Opacity="0.65"
                                       FontWeight="Bold"
                                       FontSize="9.5"                                       
                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Margin="0,6,0,6"
                                       Text="{Binding [0]}"/>
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF"/>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <MaterialDesignTh:Card UniformCornerRadius="2"  Background="{TemplateBinding Background}" MaterialDesignTh:ShadowAssist.ShadowDepth="Depth0">
                            <Grid>
                                <Grid.Resources>
                                    <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid Cursor="Hand">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver" />
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To=".56" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <MaterialDesignTh:Ripple HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <Viewbox Height="12" Margin="8">
                                                    <Path x:Name="path" Data="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z" Fill="{TemplateBinding Foreground}" Stretch="Fill" />
                                                </Viewbox>
                                            </MaterialDesignTh:Ripple>
                                        </Grid>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid Cursor="Hand">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver"/>
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <MaterialDesignTh:Ripple HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <Viewbox Height="12" Margin="8">
                                                    <Path x:Name="path" Data="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" Fill="{TemplateBinding Foreground}" Stretch="Fill"  />
                                                </Viewbox>
                                            </MaterialDesignTh:Ripple>
                                        </Grid>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid Cursor="Hand">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver" />
                                                    <VisualState x:Name="Disabled"/>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <MaterialDesignTh:MaterialDateDisplay x:Name="buttonContent" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                                                     IsEnabled="{TemplateBinding IsEnabled}">
                                                <MaterialDesignTh:MaterialDateDisplay.DisplayDate>
                                                    <MultiBinding Mode="OneWay">
                                                        <MultiBinding.Converter>
                                                            <converters:CalendarDateCoalesceConverter />
                                                        </MultiBinding.Converter>
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Calendar}}" Path="DisplayDate" />
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Calendar}}" Path="SelectedDate" />
                                                    </MultiBinding>
                                                </MaterialDesignTh:MaterialDateDisplay.DisplayDate>
                                            </MaterialDesignTh:MaterialDateDisplay>
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border Grid.ColumnSpan="3" Grid.Row="0" Background="{DynamicResource PrimaryHueMidBrush}" />
                                <Button x:Name="PART_HeaderButton"
                                        Grid.Row="0"
                                        Grid.ColumnSpan="3"
                                        FontWeight="Bold" Focusable="False" FontSize="10.5"
                                        HorizontalAlignment="Left" VerticalAlignment="Center"
                                        Template="{StaticResource HeaderButtonTemplate}"
                                        Height="Auto"
                                        Width="Auto"
                                        Margin="20 15"/>
                                <Button x:Name="PART_PreviousButton" Grid.Row="1" Grid.Column="0" Focusable="False" HorizontalAlignment="Left" Height="36" Template="{StaticResource PreviousButtonTemplate}" Width="32"
                                            Margin="6 0 0 0" Foreground="{TemplateBinding Foreground}" />
                                <TextBlock x:Name="CurrentDateTextBlock"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"
                                           Margin="8"
                                           FontSize="14"
                                           Grid.Row="1" Grid.Column="1"
                                           FontWeight="SemiBold"
                                           RenderTransformOrigin="0, 0.5"
                                           Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}, Path=DisplayDate, StringFormat=MMMM yyyy}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <Button x:Name="PART_NextButton" Grid.Row="1" Grid.Column="2" Focusable="False" HorizontalAlignment="Right" Height="36" Template="{StaticResource NextButtonTemplate}" Width="32"
                                            Margin="0 0 6 0" Foreground="{TemplateBinding Foreground}" />

                                <Grid x:Name="MonthViewWrapperGrid"
                                      Grid.ColumnSpan="3"
                                      Grid.Row="2"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Top"
                                      Margin="6 -1 6 6"
                                      Visibility="Visible">
                                    <Border x:Name="PART_MonthViewCopy" RenderTransformOrigin="0, 0.5"
                                            Opacity="0" Margin="4 7 4 3">
                                        <Border.Background>
                                            <VisualBrush Visual="{Binding ElementName=PART_MonthView}" Stretch="UniformToFill"/>
                                        </Border.Background>
                                        <Border.RenderTransform>
                                            <TranslateTransform X="0"/>
                                        </Border.RenderTransform>
                                    </Border>
                                    <Grid x:Name="PART_MonthView" RenderTransformOrigin="0, 0.5">
                                        <Grid.RenderTransform>
                                            <TranslateTransform X="0" />
                                        </Grid.RenderTransform>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>

                                <Grid x:Name="YearViewWrapperGrid"
                                      Grid.ColumnSpan="3"
                                      Grid.Row="2"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Top"
                                      Margin="6 -3 7 6"
                                      Visibility="Hidden">
                                    <Border x:Name="PART_YearViewCopy" RenderTransformOrigin="0, 0.5"
                                            Opacity="0" Margin="2">
                                        <Border.Background>
                                            <VisualBrush Visual="{Binding ElementName=PART_YearView}" Stretch="UniformToFill"/>
                                        </Border.Background>
                                        <Border.RenderTransform>
                                            <TranslateTransform X="0"/>
                                        </Border.RenderTransform>
                                    </Border>
                                    <Grid x:Name="PART_YearView"
                                                 RenderTransformOrigin="0, 0.5">
                                        <Grid.RenderTransform>
                                            <TranslateTransform X="0" />
                                        </Grid.RenderTransform>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </MaterialDesignTh:Card>
                        <Rectangle x:Name="PART_DisabledVisual" Fill="{StaticResource DisabledColor}" Opacity="0" RadiusY="2" RadiusX="2" Stretch="Fill" Stroke="{StaticResource DisabledColor}" StrokeThickness="1" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                            <Setter Property="Visibility" TargetName="MonthViewWrapperGrid" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="YearViewWrapperGrid" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                            <Setter Property="Visibility" TargetName="MonthViewWrapperGrid" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="YearViewWrapperGrid" Value="Visible"/>
                        </DataTrigger>
                        <EventTrigger RoutedEvent="Button.Click" SourceName="PART_NextButton">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="CurrentDateTextBlock"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     EasingFunction="{StaticResource EasingFunction}"
                                                     AccelerationRatio="0.1" DecelerationRatio="0.89"
                                                     From="240" To="0" Duration="0:0:0.450"/>

                                    <DoubleAnimation Storyboard.TargetName="PART_MonthViewCopy"
                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                     From="1" To="0" Duration="0:0:0.450"/>

                                    <DoubleAnimation Storyboard.TargetName="PART_MonthViewCopy"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="0" To="-270" Duration="0:0:0.450"
                                                     AccelerationRatio="0.3" DecelerationRatio="0.69"/>

                                    <DoubleAnimation Storyboard.TargetName="PART_MonthView"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="270" To="0" Duration="0:0:0.450"
                                                     AccelerationRatio="0.3" DecelerationRatio="0.69"/>

                                    <DoubleAnimation Storyboard.TargetName="PART_YearViewCopy"
                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                     From="1" To="0" Duration="0:0:0.450"/>

                                    <DoubleAnimation Storyboard.TargetName="PART_YearViewCopy"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="0" To="-240" Duration="0:0:0.450"
                                                     AccelerationRatio="0.3" DecelerationRatio="0.69"/>

                                    <DoubleAnimation Storyboard.TargetName="PART_YearView"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="240" To="0" Duration="0:0:0.450"
                                                     AccelerationRatio="0.3" DecelerationRatio="0.69"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.Click" SourceName="PART_PreviousButton">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="CurrentDateTextBlock"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     EasingFunction="{StaticResource EasingFunction}"
                                                     AccelerationRatio="0.1" DecelerationRatio="0.89"
                                                     From="-240" To="0" Duration="0:0:0.450"/>

                                    <DoubleAnimation Storyboard.TargetName="PART_MonthViewCopy"
                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                     From="1" To="0" Duration="0:0:0.450"/>

                                    <DoubleAnimation Storyboard.TargetName="PART_MonthViewCopy"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="0" To="270" Duration="0:0:0.450"
                                                     AccelerationRatio="0.3" DecelerationRatio="0.69"/>

                                    <DoubleAnimation Storyboard.TargetName="PART_MonthView"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="-270" To="0" Duration="0:0:0.450"
                                                     AccelerationRatio="0.3" DecelerationRatio="0.69"/>

                                    <DoubleAnimation Storyboard.TargetName="PART_YearViewCopy"
                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                     From="1" To="0" Duration="0:0:0.450"/>

                                    <DoubleAnimation Storyboard.TargetName="PART_YearViewCopy"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="0" To="240" Duration="0:0:0.450"
                                                     AccelerationRatio="0.3" DecelerationRatio="0.69"/>

                                    <DoubleAnimation Storyboard.TargetName="PART_YearView"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="-240" To="0" Duration="0:0:0.450"
                                                     AccelerationRatio="0.3" DecelerationRatio="0.69"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MCMaterialDesignDatePickerCalendarPortrait" TargetType="{x:Type Calendar}" 
           BasedOn="{StaticResource MaterialDesignDatePickerCalendarPortrait}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(MaterialDesignTh:ShadowAssist.CacheMode)}">
                        <Border Effect="{DynamicResource MaterialDesignShadowDepth4}" Padding="16 8 16 24">
                            <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Style="{DynamicResource MCMaterialDesignCalendarItemPortrait}"/>
                        </Border>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Calendar}" BasedOn="{StaticResource MCMaterialDesignDatePickerCalendarPortrait}"/>

    <!--*********************************** Date picker ***********************************-->
    <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}">
        <Setter Property="Margin" Value="25 15 5 5"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Width" Value="{StaticResource TextInputControlWidth}"/>
        <Setter Property="CalendarStyle" Value="{StaticResource MCMaterialDesignDatePickerCalendarPortrait}"/>
        <!--<Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                x:Name="border"
                                Padding="0 4 0 4"
                                SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".56" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Root"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="PART_Root"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Background="Transparent">
                                <Grid.Resources>
                                    <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid Background="Transparent">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver"/>
                                                    <VisualState x:Name="Pressed"/>
                                                    <VisualState x:Name="Disabled"/>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Viewbox HorizontalAlignment="Right">
                                                <Canvas Width="24" Height="24">
                                                    <Path Data="M19,19H5V8H19M16,1V3H8V1H6V3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3H18V1M17,12H12V17H17V12Z" Fill="{TemplateBinding Foreground}" />
                                                </Canvas>
                                            </Viewbox>
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PART_Button"
                                        Grid.Column="1"
                                        Foreground="{TemplateBinding BorderBrush}"
                                        Focusable="False"
                                        HorizontalAlignment="Right"
                                        Margin="4 0 0 -3"
                                        Grid.Row="0"
                                        Template="{StaticResource DropDownButtonTemplate}" Padding="0"
					    				Height="17" />
                                <DatePickerTextBox x:Name="PART_TextBox"
                                                   Grid.Column="0"
                                                   Focusable="{TemplateBinding Focusable}"
                                                   HorizontalContentAlignment="Stretch"
                                                   Grid.Row="0"
                                                   VerticalContentAlignment="Center"
                                                   Style="{DynamicResource MaterialDesignDatePickerTextBox}"
					    						   HorizontalAlignment="Stretch" />
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" 
                                       Placement="Custom"
                                       CustomPopupPlacementCallback="{x:Static MaterialDesignTh:CustomPopupPlacementCallbackHelper.LargePopupCallback}"
                                       PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"
					    			   PopupAnimation="Fade"  />
                            </Grid>
                        </Border>
                        <MaterialDesignTh:Underline x:Name="Underline" Visibility="{Binding Path=(MaterialDesignTh:TextFieldAssist.DecorationVisibility), RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="true">
                            <Setter TargetName="Underline" Property="IsActive" Value="True"/>
                            <Setter Property="BorderBrush"  Value="{DynamicResource PrimaryHueMidBrush}"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}"/>
                            <Setter TargetName="Underline" Property="Background" Value="{DynamicResource ValidationErrorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--*********************************** Combo box ***********************************-->
    <Style x:Key="MCComboBoxFloatingHintStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="{StaticResource TextInputControlWidth}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
    </Style>

    <Style x:Key="MCComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="{StaticResource TextInputControlWidth}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MCComboBoxFloatingHintStyle}"/>

    <!--*********************************** Label ***********************************-->
    <Style x:Key="MCLabelStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource MetroLabel}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource MCLabelStyle}"/>

    <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource MaterialDesignToolTip}">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <!--*********************************** Group box ***********************************-->
    <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MetroGroupBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <!--*********************************** Data grid ***********************************-->
    <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource MetroDataGrid}">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <!--<Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />-->
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="MaxColumnWidth" Value="300"/>
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
    </Style>

    <Style x:Key="MCDataGridRowStyle" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}"/>

    <!--*********************************** Tree view ***********************************-->
    <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource VirtualisedMetroTreeView}">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <!--*********************************** List box ***********************************-->
    <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource VirtualisedMetroListBox}">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <!--*********************************** Tool bar ***********************************-->
    <Style TargetType="{x:Type ToolBarTray}">
        <Setter Property="IsLocked" Value="True"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource MaterialDesignToolBarBackground}" />
    </Style>

    <!--*********************************** Expander ***********************************-->
    <Style x:Key="MCExpanderStyle" TargetType="{x:Type Expander}" BasedOn="{StaticResource MetroExpander}"/>
    <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource MCExpanderStyle}"/>

</ResourceDictionary>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MoneyChest.Style"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:MaterialDesignTh="http://materialdesigninxaml.net/winfx/xaml/themes">

    <!--*********************************** Constants ***********************************-->
    <Thickness x:Key="ControlMargin">5</Thickness>
    <system:Double x:Key="DefaultFontSize">14</system:Double>
    <system:Double x:Key="LargeFontSize">24</system:Double>
    <system:Double x:Key="SmallFontSize">12</system:Double>
    <system:Double x:Key="ToolBarButtonSize">40</system:Double>
    <system:Double x:Key="TextInputControlWidth">200</system:Double>
    <system:Double x:Key="TextButtonInputControlWidth">165</system:Double>

    <Style TargetType="{x:Type Control}">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <Style x:Key="TextBoxIconStyle" TargetType="{x:Type FrameworkElement}">
        <Setter Property="Margin" Value="0 0 3 -5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TextBoxMultilineIconStyle" TargetType="{x:Type FrameworkElement}">
        <Setter Property="Margin" Value="0 0 3 10"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>
    
    <!--*********************************** Window ***********************************-->
    <Style x:Key="MoneyChestWindowStyle" TargetType="{x:Type controls:MetroWindow}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="GlowBrush" Value="{DynamicResource AccentColorBrush}"/>
        <Setter Property="ShowIconOnTitleBar" Value="True"/>
        <Setter Property="Icon" Value="money.ico"/>
        <Setter Property="Title" Value="Money Chest"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="IconTemplate">
            <Setter.Value>
                <DataTemplate>
                    <controls:MultiFrameImage Width="{TemplateBinding Width}" Margin="5 0 0 0"
                                                      Height="{TemplateBinding Height}"
                                                      MultiFrameImageMode="{Binding IconScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}"
                                                      RenderOptions.BitmapScalingMode="{Binding IconBitmapScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}"
                                                      RenderOptions.EdgeMode="{Binding IconEdgeMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}"
                                                      Source="{TemplateBinding Content}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--*********************************** Button ***********************************-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource SquareButtonStyle}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
    </Style>

    <Style x:Key="AccentedButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="IsDefault" Value="True"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
    </Style>

    <Style x:Key="TextBoxButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0 5 5 5"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>

    <Style x:Key="LinkButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextDecorations="Underline">
                <ContentPresenter /></TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CircleButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Metro.Styles.MetroCircleButtonStyle}">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="36"/>
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
    </Style>

    <Style x:Key="CircleToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MahApps.Metro.Styles.MetroCircleToggleButtonStyle}">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="36"/>
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
    </Style>

    <Style x:Key="CircleActionToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignActionToggleButton}">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="36"/>
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}"/>
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
    </Style>

    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MetroRadioButton}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <!--*********************************** Check box ***********************************-->
    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MetroCheckBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <!--*********************************** Text box ***********************************-->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="{StaticResource TextInputControlWidth}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <Style x:Key="SimpleTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="{StaticResource TextInputControlWidth}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <Style x:Key="HintButtonTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="{StaticResource TextButtonInputControlWidth}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <Style x:Key="HintMultilineTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="{StaticResource TextInputControlWidth}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="MaxHeight" Value="80"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="SpellCheck.IsEnabled" Value="True"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    </Style>
    
    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignFloatingHintPasswordBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="{StaticResource TextInputControlWidth}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>
    
    <!--*********************************** Date picker ***********************************-->
    <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="{StaticResource TextInputControlWidth}"/>
        <!--<Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                x:Name="border"
                                Padding="0 4 0 4"
                                SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".56" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Root"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="PART_Root"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Background="Transparent">
                                <Grid.Resources>
                                    <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid Background="Transparent">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver"/>
                                                    <VisualState x:Name="Pressed"/>
                                                    <VisualState x:Name="Disabled"/>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Viewbox HorizontalAlignment="Right">
                                                <Canvas Width="24" Height="24">
                                                    <Path Data="M19,19H5V8H19M16,1V3H8V1H6V3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3H18V1M17,12H12V17H17V12Z" Fill="{TemplateBinding Foreground}" />
                                                </Canvas>
                                            </Viewbox>
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PART_Button"
                                        Grid.Column="1"
                                        Foreground="{TemplateBinding BorderBrush}"
                                        Focusable="False"
                                        HorizontalAlignment="Right"
                                        Margin="4 0 0 -3"
                                        Grid.Row="0"
                                        Template="{StaticResource DropDownButtonTemplate}" Padding="0"
					    				Height="17" />
                                <DatePickerTextBox x:Name="PART_TextBox"
                                                   Grid.Column="0"
                                                   Focusable="{TemplateBinding Focusable}"
                                                   HorizontalContentAlignment="Stretch"
                                                   Grid.Row="0"
                                                   VerticalContentAlignment="Center"
                                                   Style="{DynamicResource MaterialDesignDatePickerTextBox}"
					    						   HorizontalAlignment="Stretch" />
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" 
                                       Placement="Custom"
                                       CustomPopupPlacementCallback="{x:Static MaterialDesignTh:CustomPopupPlacementCallbackHelper.LargePopupCallback}"
                                       PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"
					    			   PopupAnimation="Fade"  />
                            </Grid>
                        </Border>
                        <MaterialDesignTh:Underline x:Name="Underline" Visibility="{Binding Path=(MaterialDesignTh:TextFieldAssist.DecorationVisibility), RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="true">
                            <Setter TargetName="Underline" Property="IsActive" Value="True"/>
                            <Setter Property="BorderBrush"  Value="{DynamicResource PrimaryHueMidBrush}"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}"/>
                            <Setter TargetName="Underline" Property="Background" Value="{DynamicResource ValidationErrorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--*********************************** Combo box ***********************************-->
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="Width" Value="{StaticResource TextInputControlWidth}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <!--*********************************** Label ***********************************-->
    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource MetroLabel}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource MaterialDesignToolTip}">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <!--*********************************** Group box ***********************************-->
    <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MetroGroupBox}">
        <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <!--*********************************** Data grid ***********************************-->
    <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource MetroDataGrid}">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <!--<Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />-->
    </Style>

    <!--*********************************** Tree view ***********************************-->
    <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource VirtualisedMetroTreeView}">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

</ResourceDictionary>
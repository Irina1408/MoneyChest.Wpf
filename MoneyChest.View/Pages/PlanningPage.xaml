<local:PageBase x:Class="MoneyChest.View.Pages.PlanningPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MoneyChest.View.Pages"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:moneyChestView="clr-namespace:MoneyChest.View"
             xmlns:iconpacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:enums="clr-namespace:MoneyChest.Model.Enums;assembly=MoneyChest.Model"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Simple events -->
        <Border x:Name="SimpleEventsBorder"  Grid.Row="0" BorderThickness="0 1 0 0" BorderBrush="{DynamicResource BlackColorBrush}">
            <Expander IsExpanded="True" Background="{DynamicResource AccentColorBrush}" BorderThickness="0" Padding="0 5 0 5">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Width="200" Grid.Column="0" Text="{moneyChestView:MultiLangBinding SimpleEvent_Plural}"
                                   VerticalAlignment="Center" Margin="10" Foreground="{DynamicResource IdealForegroundColorBrush}"  FontSize="{DynamicResource DefaultFontSize}"/>

                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                            <Button Command="{Binding AddCommand}" 
                                        ToolTip="{moneyChestView:MultiLangBinding General_Add}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconMaterial Kind="Plus"/>
                            </Button>

                            <Button Command="{Binding EditCommand}" 
                                        ToolTip="{moneyChestView:MultiLangBinding General_Edit}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconModern Kind="Edit"/>
                            </Button>

                            <Button Command="{Binding DeleteCommand}"
                                        ToolTip="{moneyChestView:MultiLangBinding General_Delete}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconModern Kind="Delete"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Expander.Header>
                <Expander.Content>
                    <!-- Simple events grid -->
                    <DataGrid x:Name="GridSimpleEvents" Margin="5" AutoGenerateColumns="False" HeadersVisibility="Column"
                              SelectionUnit="FullRow" IsReadOnly="True"
                              ItemsSource="{Binding Events, NotifyOnSourceUpdated=True}">   
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Add}" Command="{Binding AddCommand}"/>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Edit}" Command="{Binding EditCommand}"/>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Delete}" Command="{Binding DeleteCommand}"/>
                                <Separator/>
                                <!-- TODO: add "Apply now" etc. -->
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>

                            <DataGridTextColumn Binding="{Binding EventStateDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding EventState_EnumName}" />

                            <DataGridTextColumn Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Description}" />

                            <DataGridTextColumn Binding="{Binding ResultValueSignCurrency, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Amount}"/>

                            <DataGridTextColumn Binding="{Binding ScheduleDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Event_Schedule}"/>

                            <DataGridTextColumn Binding="{Binding Remark, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Remark}" />

                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource MetroDataGridRow}" TargetType="{x:Type DataGridRow}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding EventState}" Value="{x:Static enums:EventState.Closed}">
                                        <Setter Property="Opacity" Value="0.5" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding TransactionType}" Value="{x:Static enums:TransactionType.Income}">
                                        <Setter Property="Foreground" Value="Green" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding TransactionType}" Value="{x:Static enums:TransactionType.Expense}">
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.CellStyle>
                            <Style BasedOn="{StaticResource MetroDataGridCell}" TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TransactionType}" Value="{x:Static enums:TransactionType.Income}">
                                        <Setter Property="Foreground" Value="Green" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding TransactionType}" Value="{x:Static enums:TransactionType.Expense}">
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                </Expander.Content>
            </Expander>
        </Border>

        <!-- Money transfer events -->
        <Border x:Name="MoneyTransferEventsBorder"  Grid.Row="1" BorderThickness="0 1 0 0" BorderBrush="{DynamicResource BlackColorBrush}">
            <Expander IsExpanded="True" Background="{DynamicResource AccentColorBrush}" BorderThickness="0" Padding="0 5 0 5">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Width="200" Grid.Column="0" Text="{moneyChestView:MultiLangBinding MoneyTransferEvent_Plural}"
                                   VerticalAlignment="Center" Margin="10" Foreground="{DynamicResource IdealForegroundColorBrush}"  FontSize="{DynamicResource DefaultFontSize}"/>

                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                            <Button Command="{Binding AddCommand}" 
                                        ToolTip="{moneyChestView:MultiLangBinding General_Add}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconMaterial Kind="Plus"/>
                            </Button>

                            <Button Command="{Binding EditCommand}" 
                                        ToolTip="{moneyChestView:MultiLangBinding General_Edit}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconModern Kind="Edit"/>
                            </Button>

                            <Button Command="{Binding DeleteCommand}"
                                        ToolTip="{moneyChestView:MultiLangBinding General_Delete}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconModern Kind="Delete"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Expander.Header>
                <Expander.Content>
                    <!-- Money Transfer Events grid -->
                    <DataGrid x:Name="GridMoneyTransferEvents" Margin="5" AutoGenerateColumns="False" HeadersVisibility="Column"
                              SelectionUnit="FullRow" IsReadOnly="True"
                              ItemsSource="{Binding Events}">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Add}" Command="{Binding AddCommand}"/>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Edit}" Command="{Binding EditCommand}"/>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Delete}" Command="{Binding DeleteCommand}"/>
                                <Separator/>
                                <!-- TODO: add "Apply now" etc. -->
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>

                            <DataGridTextColumn Binding="{Binding EventStateDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding EventState_EnumName}" />

                            <DataGridTextColumn Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Description}" />
                            
                            <DataGridTextColumn Binding="{Binding StorageFrom.Name, UpdateSourceTrigger=PropertyChanged}"
                                            Header="{moneyChestView:MultiLangBinding MoneyTransfer_StorageFrom}" />
                            <DataGridTextColumn Binding="{Binding StorageTo.Name, UpdateSourceTrigger=PropertyChanged}"
                                            Header="{moneyChestView:MultiLangBinding MoneyTransfer_StorageTo}" />

                            <DataGridTextColumn Binding="{Binding ValueTransfering, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Amount}"/>

                            <DataGridTextColumn Binding="{Binding ScheduleDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Event_Schedule}"/>

                            <DataGridTextColumn Binding="{Binding Remark, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Remark}" />

                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource MetroDataGridRow}" TargetType="{x:Type DataGridRow}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding EventState}" Value="{x:Static enums:EventState.Closed}">
                                        <Setter Property="Opacity" Value="0.5" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>
                </Expander.Content>
            </Expander>
        </Border>

        <!-- Repay Debt Events -->
        <Border x:Name="RepayDebtEventsBorder"  Grid.Row="2" BorderThickness="0 1 0 0" BorderBrush="{DynamicResource BlackColorBrush}">
            <Expander IsExpanded="True" Background="{DynamicResource AccentColorBrush}" BorderThickness="0" Padding="0 5 0 5">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Width="200" Grid.Column="0" Text="{moneyChestView:MultiLangBinding RepayDebtEvent_Plural}"
                                   VerticalAlignment="Center" Margin="10" Foreground="{DynamicResource IdealForegroundColorBrush}"  FontSize="{DynamicResource DefaultFontSize}"/>

                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                            <Button Command="{Binding AddCommand}" 
                                        ToolTip="{moneyChestView:MultiLangBinding General_Add}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconMaterial Kind="Plus"/>
                            </Button>

                            <Button Command="{Binding EditCommand}" 
                                        ToolTip="{moneyChestView:MultiLangBinding General_Edit}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconModern Kind="Edit"/>
                            </Button>

                            <Button Command="{Binding DeleteCommand}"
                                        ToolTip="{moneyChestView:MultiLangBinding General_Delete}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconModern Kind="Delete"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Expander.Header>
                <Expander.Content>
                    <!-- Repay Debt Events grid -->
                    <DataGrid x:Name="GridRepayDebtEvents" Margin="5" AutoGenerateColumns="False" HeadersVisibility="Column"
                              SelectionUnit="FullRow" IsReadOnly="True"
                              ItemsSource="{Binding Events}">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Add}" Command="{Binding AddCommand}"/>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Edit}" Command="{Binding EditCommand}"/>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Delete}" Command="{Binding DeleteCommand}"/>
                                <Separator/>
                                <!-- TODO: add "Apply now" etc. -->
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>

                            <DataGridTextColumn Binding="{Binding EventStateDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding EventState_EnumName}" />

                            <DataGridTextColumn Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Description}" />

                            <DataGridTextColumn Binding="{Binding Debt.Description, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Debt_Singular}" />

                            <DataGridTextColumn Binding="{Binding ResultValueSignCurrency, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Amount}"/>

                            <DataGridTextColumn Binding="{Binding ScheduleDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Event_Schedule}"/>

                            <DataGridTextColumn Binding="{Binding Remark, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Remark}" />

                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource MetroDataGridRow}" TargetType="{x:Type DataGridRow}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding EventState}" Value="{x:Static enums:EventState.Closed}">
                                        <Setter Property="Opacity" Value="0.5" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Debt.DebtType}" Value="{x:Static enums:DebtType.GiveBorrow}">
                                        <Setter Property="Foreground" Value="Green" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Debt.DebtType}" Value="{x:Static enums:DebtType.TakeBorrow}">
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.CellStyle>
                            <Style BasedOn="{StaticResource MetroDataGridCell}" TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Debt.DebtType}" Value="{x:Static enums:DebtType.GiveBorrow}">
                                        <Setter Property="Foreground" Value="Green" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Debt.DebtType}" Value="{x:Static enums:DebtType.TakeBorrow}">
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                </Expander.Content>
            </Expander>
        </Border>
    </Grid>
</local:PageBase>

<local:PageBase x:Class="MoneyChest.View.Pages.PlanningPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MoneyChest.View.Pages"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:moneyChestView="clr-namespace:MoneyChest.View"
             xmlns:iconpacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:enums="clr-namespace:MoneyChest.Model.Enums;assembly=MoneyChest.Model"
             xmlns:converters="clr-namespace:MoneyChest.View.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <converters:EnumToBoolConverter x:Key="EBConverter"/>
        <converters:EnumToStringConverter x:Key="ESConverter"/>
        <converters:PercentageConverter x:Key="PctConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        
        <!-- Simple events -->
        <Border x:Name="SimpleEventsBorder" Grid.Column="0" Grid.Row="0" BorderThickness="0 1 0 0" 
                BorderBrush="{DynamicResource BlackColorBrush}">
            <Expander IsExpanded="True" Background="{DynamicResource AccentColorBrush}" BorderThickness="0" Padding="0 5 0 5">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Width="400" Grid.Column="0" Text="{moneyChestView:MultiLangBinding SimpleEvent_Plural}"
                                   VerticalAlignment="Center" Margin="10" Foreground="{DynamicResource IdealForegroundColorBrush}"  FontSize="{DynamicResource DefaultFontSize}"/>

                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                            <Button Command="{Binding AddCommand}" 
                                        ToolTip="{moneyChestView:MultiLangBinding General_Add}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconMaterial Kind="Plus"/>
                            </Button>

                            <Button Command="{Binding EditCommand}" 
                                        ToolTip="{moneyChestView:MultiLangBinding General_Edit}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconModern Kind="Edit"/>
                            </Button>

                            <Button Command="{Binding DeleteCommand}"
                                        ToolTip="{moneyChestView:MultiLangBinding General_Delete}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconModern Kind="Delete"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Expander.Header>
                <Expander.Content>
                    <!-- Simple events grid -->
                    <DataGrid x:Name="GridSimpleEvents" Margin="5" AutoGenerateColumns="False" HeadersVisibility="Column"
                              SelectionUnit="FullRow" IsReadOnly="True">   
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Add}" Command="{Binding AddCommand}"/>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Edit}" Command="{Binding EditCommand}"/>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Delete}" Command="{Binding DeleteCommand}"/>
                                <Separator/>
                                <!-- TODO: add "Apply now" etc. -->
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>

                            <DataGridTextColumn Binding="{Binding EventStateDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding EventState_EnumName}" />

                            <DataGridTextColumn Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Description}" />

                            <DataGridTextColumn Binding="{Binding ResultValueSignCurrency, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Amount}"/>

                            <DataGridTextColumn Binding="{Binding ScheduleDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Event_Schedule}"/>

                            <DataGridTextColumn Binding="{Binding Remark, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Remark}" />

                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource MCDataGridRowStyle}" TargetType="{x:Type DataGridRow}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding EventState}" Value="{x:Static enums:EventState.Closed}">
                                        <Setter Property="Opacity" Value="0.5" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RecordType}" Value="{x:Static enums:RecordType.Income}">
                                        <Setter Property="Foreground" Value="Green" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RecordType}" Value="{x:Static enums:RecordType.Expense}">
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.CellStyle>
                            <Style BasedOn="{StaticResource MetroDataGridCell}" TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RecordType}" Value="{x:Static enums:RecordType.Income}">
                                        <Setter Property="Foreground" Value="Green" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RecordType}" Value="{x:Static enums:RecordType.Expense}">
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                </Expander.Content>
            </Expander>
        </Border>

        <!-- Money transfer events -->
        <Border x:Name="MoneyTransferEventsBorder" Grid.Column="0" Grid.Row="1" BorderThickness="0 1 0 0" 
                BorderBrush="{DynamicResource BlackColorBrush}">
            <Expander IsExpanded="True" Background="{DynamicResource AccentColorBrush}" BorderThickness="0" Padding="0 5 0 5">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Width="400" Grid.Column="0" Text="{moneyChestView:MultiLangBinding MoneyTransferEvent_Plural}"
                                   VerticalAlignment="Center" Margin="10" Foreground="{DynamicResource IdealForegroundColorBrush}"  FontSize="{DynamicResource DefaultFontSize}"/>

                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                            <Button Command="{Binding AddCommand}" 
                                        ToolTip="{moneyChestView:MultiLangBinding General_Add}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconMaterial Kind="Plus"/>
                            </Button>

                            <Button Command="{Binding EditCommand}" 
                                        ToolTip="{moneyChestView:MultiLangBinding General_Edit}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconModern Kind="Edit"/>
                            </Button>

                            <Button Command="{Binding DeleteCommand}"
                                        ToolTip="{moneyChestView:MultiLangBinding General_Delete}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconModern Kind="Delete"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Expander.Header>
                <Expander.Content>
                    <!-- Money Transfer Events grid -->
                    <DataGrid x:Name="GridMoneyTransferEvents" Margin="5" AutoGenerateColumns="False" HeadersVisibility="Column"
                              SelectionUnit="FullRow" IsReadOnly="True">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Add}" Command="{Binding AddCommand}"/>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Edit}" Command="{Binding EditCommand}"/>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Delete}" Command="{Binding DeleteCommand}"/>
                                <Separator/>
                                <!-- TODO: add "Apply now" etc. -->
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>

                            <DataGridTextColumn Binding="{Binding EventStateDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding EventState_EnumName}" />

                            <DataGridTextColumn Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Description}" />
                            
                            <DataGridTextColumn Binding="{Binding StorageFrom.Name, UpdateSourceTrigger=PropertyChanged}"
                                            Header="{moneyChestView:MultiLangBinding MoneyTransfer_StorageFrom}" />
                            <DataGridTextColumn Binding="{Binding StorageTo.Name, UpdateSourceTrigger=PropertyChanged}"
                                            Header="{moneyChestView:MultiLangBinding MoneyTransfer_StorageTo}" />

                            <DataGridTextColumn Binding="{Binding ValueTransfering, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Amount}"/>

                            <DataGridTextColumn Binding="{Binding ScheduleDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Event_Schedule}"/>

                            <DataGridTextColumn Binding="{Binding Remark, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Remark}" />

                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource MCDataGridRowStyle}" TargetType="{x:Type DataGridRow}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding EventState}" Value="{x:Static enums:EventState.Closed}">
                                        <Setter Property="Opacity" Value="0.5" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>
                </Expander.Content>
            </Expander>
        </Border>

        <!-- Repay Debt Events -->
        <Border x:Name="RepayDebtEventsBorder" Grid.Column="0" Grid.Row="2" BorderThickness="0 1 0 0" 
                BorderBrush="{DynamicResource BlackColorBrush}">
            <Expander IsExpanded="True" Background="{DynamicResource AccentColorBrush}" BorderThickness="0" Padding="0 5 0 5">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Width="400" Grid.Column="0" Text="{moneyChestView:MultiLangBinding RepayDebtEvent_Plural}"
                                   VerticalAlignment="Center" Margin="10" Foreground="{DynamicResource IdealForegroundColorBrush}"  FontSize="{DynamicResource DefaultFontSize}"/>

                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                            <Button Command="{Binding AddCommand}" 
                                        ToolTip="{moneyChestView:MultiLangBinding General_Add}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconMaterial Kind="Plus"/>
                            </Button>

                            <Button Command="{Binding EditCommand}" 
                                        ToolTip="{moneyChestView:MultiLangBinding General_Edit}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconModern Kind="Edit"/>
                            </Button>

                            <Button Command="{Binding DeleteCommand}"
                                        ToolTip="{moneyChestView:MultiLangBinding General_Delete}"
                                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Left"
                                        Foreground="{DynamicResource IdealForegroundColorBrush}">

                                <iconpacks:PackIconModern Kind="Delete"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Expander.Header>
                <Expander.Content>
                    <!-- Repay Debt Events grid -->
                    <DataGrid x:Name="GridRepayDebtEvents" Margin="5" AutoGenerateColumns="False" HeadersVisibility="Column"
                              SelectionUnit="FullRow" IsReadOnly="True">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Add}" Command="{Binding AddCommand}"/>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Edit}" Command="{Binding EditCommand}"/>
                                <MenuItem Header="{moneyChestView:MultiLangBinding General_Delete}" Command="{Binding DeleteCommand}"/>
                                <Separator/>
                                <!-- TODO: add "Apply now" etc. -->
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>

                            <DataGridTextColumn Binding="{Binding EventStateDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding EventState_EnumName}" />

                            <DataGridTextColumn Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Description}" />

                            <DataGridTextColumn Binding="{Binding Debt.Description, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Debt_Singular}" />

                            <DataGridTextColumn Binding="{Binding ResultValueSignCurrency, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Amount}"/>

                            <DataGridTextColumn Binding="{Binding ScheduleDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Event_Schedule}"/>

                            <DataGridTextColumn Binding="{Binding Remark, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Remark}" />

                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource MCDataGridRowStyle}" TargetType="{x:Type DataGridRow}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding EventState}" Value="{x:Static enums:EventState.Closed}">
                                        <Setter Property="Opacity" Value="0.5" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Debt.DebtType}" Value="{x:Static enums:DebtType.GiveBorrow}">
                                        <Setter Property="Foreground" Value="Green" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Debt.DebtType}" Value="{x:Static enums:DebtType.TakeBorrow}">
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.CellStyle>
                            <Style BasedOn="{StaticResource MetroDataGridCell}" TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Debt.DebtType}" Value="{x:Static enums:DebtType.GiveBorrow}">
                                        <Setter Property="Foreground" Value="Green" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Debt.DebtType}" Value="{x:Static enums:DebtType.TakeBorrow}">
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                </Expander.Content>
            </Expander>
        </Border>

        <!-- Limits expander -->
        <Expander x:Name="ExpanderLimits" Grid.Column="1" Grid.RowSpan="4" ExpandDirection="Right" 
                  Background="{DynamicResource AccentColorBrush}"
                  BorderThickness="0" IsExpanded="False" Padding="0" Expanded="ExpanderLimits_Expanded">
            <Expander.Style>
                <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource MCExpanderStyle}">
                    <Style.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Width" Value="{Binding ActualWidth, Converter={StaticResource PctConverter}, 
                                RelativeSource={RelativeSource AncestorType={x:Type Grid}}, ConverterParameter=0.5,
                                UpdateSourceTrigger=PropertyChanged}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Expander.Style>
            <Expander.Header>
                <TextBlock RenderTransformOrigin=".5 .5" Text="{moneyChestView:MultiLangBinding Limit_Plural}"
                         Foreground="{DynamicResource IdealForegroundColorBrush}" Margin="10" FontSize="{DynamicResource DefaultFontSize}">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="90" />
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Expander.Header>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <!-- Menu -->
                <ToolBarTray ClipToBounds="True" VerticalAlignment="Top" Background="{DynamicResource MaterialDesignToolBarBackground}">
                    <ToolBar Style="{DynamicResource MaterialDesignToolBar}">
                        <Button Command="{Binding AddCommand}" ToolTip="{moneyChestView:MultiLangBinding General_Add}" Height="{DynamicResource ToolBarButtonSize}" Width="{DynamicResource ToolBarButtonSize}">
                            <iconpacks:PackIconMaterial Kind="Plus"/>
                        </Button>

                        <Button Command="{Binding EditCommand}" ToolTip="{moneyChestView:MultiLangBinding General_Edit}" 
                        Height="{DynamicResource ToolBarButtonSize}" Width="{DynamicResource ToolBarButtonSize}">
                            <iconpacks:PackIconModern Kind="Edit"/>
                        </Button>

                        <Button Command="{Binding DeleteCommand}" ToolTip="{moneyChestView:MultiLangBinding General_Delete}" 
                        Height="{DynamicResource ToolBarButtonSize}" Width="{DynamicResource ToolBarButtonSize}">
                            <iconpacks:PackIconModern Kind="Delete"/>
                        </Button>
                    </ToolBar>
                </ToolBarTray>

                <!-- Limits grid -->
                <DataGrid x:Name="GridLimits" Grid.Row="1"
                  Margin="5"
                  AutoGenerateColumns="False"
                  HeadersVisibility="Column"
                  SelectionUnit="FullRow"
                  IsReadOnly="True">
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{moneyChestView:MultiLangBinding General_Add}" 
                                      Command="{Binding AddCommand}"/>
                            <MenuItem Header="{moneyChestView:MultiLangBinding General_Edit}" 
                                      Command="{Binding EditCommand}"/>
                            <MenuItem Header="{moneyChestView:MultiLangBinding General_Delete}" 
                                      Command="{Binding DeleteCommand}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>

                        <DataGridTextColumn Binding="{Binding State, Converter={StaticResource ESConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                            Header="{moneyChestView:MultiLangBinding LimitState_EnumName}"/>
                        
                        <DataGridTextColumn Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" 
                                            Header="{moneyChestView:MultiLangBinding General_Description}" />
                        
                        <DataGridTextColumn Binding="{Binding DateFrom, UpdateSourceTrigger=PropertyChanged, StringFormat=d}"
                                            Header="{moneyChestView:MultiLangBinding General_DateFrom}"/>
                        <DataGridTextColumn Binding="{Binding DateUntil, UpdateSourceTrigger=PropertyChanged, StringFormat=d}"
                                            Header="{moneyChestView:MultiLangBinding General_DateUntil}"/>

                        <DataGridTextColumn Binding="{Binding RemainingPercentValueCurrency, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Limit_RemainingValue}"/>

                        <DataGridTextColumn Binding="{Binding Category.Name, UpdateSourceTrigger=PropertyChanged}"
                                            Header="{moneyChestView:MultiLangBinding Category_Singular}" />
                        <DataGridTextColumn Binding="{Binding Remark, UpdateSourceTrigger=PropertyChanged}"
                                            Header="{moneyChestView:MultiLangBinding General_Remark}" />
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style BasedOn="{StaticResource MCDataGridRowStyle}" TargetType="{x:Type DataGridRow}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding State, Converter={StaticResource EBConverter}, 
                                    ConverterParameter={x:Static enums:LimitState.Active}}" Value="False">
                                    <Setter Property="Opacity" Value="0.5" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsExceeded}" Value="true">
                                    <Setter Property="Foreground" Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
            </Grid>
        </Expander>
    </Grid>
</local:PageBase>

<local:PageBase x:Class="MoneyChest.View.Pages.PlanningPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MoneyChest.View.Pages"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:moneyChestView="clr-namespace:MoneyChest.View"
             xmlns:iconpacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:enums="clr-namespace:MoneyChest.Model.Enums;assembly=MoneyChest.Model"
             xmlns:converters="clr-namespace:MoneyChest.View.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <converters:EnumToBoolConverter x:Key="EBConverter"/>
        <converters:EnumToStringConverter x:Key="ESConverter"/>
        <converters:PercentageConverter x:Key="PctConverter"/>

        <ContextMenu x:Key="EventContextMenu">
            <MenuItem Header="{moneyChestView:MultiLangBinding General_Add}" Command="{Binding AddCommand}"/>
            <MenuItem Header="{moneyChestView:MultiLangBinding General_Edit}" Command="{Binding EditCommand}"/>
            <MenuItem Header="{moneyChestView:MultiLangBinding General_Delete}" Command="{Binding DeleteCommand}"/>
            <Separator/>
            <MenuItem Header="{moneyChestView:MultiLangBinding Event_Run}" Command="{Binding RunCommand}"/>
            <MenuItem Header="{moneyChestView:MultiLangBinding Event_Pause}" Command="{Binding PauseCommand}"/>
            <MenuItem Header="{moneyChestView:MultiLangBinding Event_Close}" Command="{Binding CloseCommand}"/>
            <Separator/>
            <MenuItem Header="{moneyChestView:MultiLangBinding Event_ApplyNow}" Command="{Binding ApplyNowCommand}"/>
            <MenuItem Header="{moneyChestView:MultiLangBinding Event_CreateTransaction}" Command="{Binding CreateTransactionCommand}"/>
        </ContextMenu>

        <ControlTemplate x:Key="EventButtonsPanel" TargetType="{x:Type ContentControl}">
            <StackPanel Orientation="Horizontal">
                <Button Command="{Binding AddCommand}" ToolTip="{moneyChestView:MultiLangBinding General_Add}" 
                    Style="{DynamicResource ExpanderButtonStyle}">
                    <iconpacks:PackIconMaterial Kind="Plus"/>
                </Button>

                <Button Command="{Binding EditCommand}" ToolTip="{moneyChestView:MultiLangBinding General_Edit}"
                    Style="{DynamicResource ExpanderButtonStyle}">
                    <iconpacks:PackIconModern Kind="Edit"/>
                </Button>

                <Button Command="{Binding DeleteCommand}" ToolTip="{moneyChestView:MultiLangBinding General_Delete}"
                    Style="{DynamicResource ExpanderButtonStyle}">
                    <iconpacks:PackIconModern Kind="Delete"/>
                </Button>

                <Button Command="{Binding RunCommand}" ToolTip="{moneyChestView:MultiLangBinding Event_Run}"
                    Style="{DynamicResource ExpanderButtonStyle}">
                    <iconpacks:PackIconFontAwesome Kind="Play" />
                </Button>

                <Button Command="{Binding PauseCommand}" ToolTip="{moneyChestView:MultiLangBinding Event_Pause}"
                    Style="{DynamicResource ExpanderButtonStyle}">
                    <iconpacks:PackIconModern Kind="ControlPause" />
                </Button>

                <Button Command="{Binding CloseCommand}" ToolTip="{moneyChestView:MultiLangBinding Event_Close}"
                    Style="{DynamicResource ExpanderButtonStyle}">
                    <iconpacks:PackIconMaterial Kind="Stop" />
                </Button>
            </StackPanel>
        </ControlTemplate>

        <Style x:Key="EventsBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="0 1 0 0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        
        <!-- Simple events -->
        <Border x:Name="SimpleEventsBorder" Grid.Column="0" Grid.Row="0" Style="{StaticResource EventsBorderStyle}"
                BorderThickness="0">
            <Expander IsExpanded="True" Style="{DynamicResource MCEntitiesExpanderStyle}" Padding="0 5 0 5">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Width="400" Grid.Column="0" Text="{moneyChestView:MultiLangBinding SimpleEvent_Plural}"
                                   VerticalAlignment="Center" Margin="10" Foreground="{DynamicResource IdealForegroundColorBrush}"  FontSize="{DynamicResource DefaultFontSize}"/>

                        <ContentControl Template="{StaticResource EventButtonsPanel}" Margin="0" Grid.Column="1"/>
                    </Grid>
                </Expander.Header>
                <Expander.Content>
                    <!-- Simple events grid -->
                    <DataGrid x:Name="GridSimpleEvents" Margin="5" AutoGenerateColumns="False" HeadersVisibility="Column"
                              SelectionUnit="FullRow" IsReadOnly="True" ContextMenu="{StaticResource EventContextMenu}"> 
                        <DataGrid.Columns>

                            <DataGridTextColumn Binding="{Binding EventStateDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding EventState_EnumName}" />

                            <DataGridTextColumn Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Description}" />

                            <DataGridTextColumn Binding="{Binding ResultValueSignCurrency, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Amount}"/>

                            <DataGridTextColumn Binding="{Binding ScheduleDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Event_Schedule}"/>

                            <DataGridTextColumn Binding="{Binding Remark, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Remark}" />

                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource EventsRowStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RecordType}" Value="{x:Static enums:RecordType.Income}">
                                        <Setter Property="Foreground" Value="{DynamicResource GreenBrush}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RecordType}" Value="{x:Static enums:RecordType.Expense}">
                                        <Setter Property="Foreground" Value="{DynamicResource RedBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MCDataGridCellStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RecordType}" Value="{x:Static enums:RecordType.Income}">
                                        <Setter Property="Foreground" Value="{DynamicResource GreenBrush}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RecordType}" Value="{x:Static enums:RecordType.Expense}">
                                        <Setter Property="Foreground" Value="{DynamicResource RedBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                </Expander.Content>
            </Expander>
        </Border>

        <!-- Money transfer events -->
        <Border x:Name="MoneyTransferEventsBorder" Grid.Column="0" Grid.Row="1" Style="{StaticResource EventsBorderStyle}">
            <Expander IsExpanded="True" Style="{DynamicResource MCEntitiesExpanderStyle}" Padding="0 5 0 5">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Width="400" Grid.Column="0" Text="{moneyChestView:MultiLangBinding MoneyTransferEvent_Plural}"
                                   VerticalAlignment="Center" Margin="10" Foreground="{DynamicResource IdealForegroundColorBrush}"  FontSize="{DynamicResource DefaultFontSize}"/>

                        <ContentControl Template="{StaticResource EventButtonsPanel}" Margin="0" Grid.Column="1"/>
                    </Grid>
                </Expander.Header>
                <Expander.Content>
                    <!-- Money Transfer Events grid -->
                    <DataGrid x:Name="GridMoneyTransferEvents" ContextMenu="{StaticResource EventContextMenu}">
                        <DataGrid.Columns>

                            <DataGridTextColumn Binding="{Binding EventStateDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding EventState_EnumName}" />

                            <DataGridTextColumn Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Description}" />
                            
                            <DataGridTextColumn Binding="{Binding StorageFrom.Name, UpdateSourceTrigger=PropertyChanged}"
                                            Header="{moneyChestView:MultiLangBinding MoneyTransfer_StorageFrom}" />
                            <DataGridTextColumn Binding="{Binding StorageTo.Name, UpdateSourceTrigger=PropertyChanged}"
                                            Header="{moneyChestView:MultiLangBinding MoneyTransfer_StorageTo}" />

                            <DataGridTextColumn Binding="{Binding ValueTransfering, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Amount}"/>

                            <DataGridTextColumn Binding="{Binding ScheduleDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Event_Schedule}"/>

                            <DataGridTextColumn Binding="{Binding Remark, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Remark}" />

                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource EventsRowStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsIncome}" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource GreenBrush}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsExpense}" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource RedBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>
                </Expander.Content>
            </Expander>
        </Border>

        <!-- Repay Debt Events -->
        <Border x:Name="RepayDebtEventsBorder" Grid.Column="0" Grid.Row="2" Style="{StaticResource EventsBorderStyle}">
            <Expander IsExpanded="True" Style="{DynamicResource MCEntitiesExpanderStyle}" Padding="0 5 0 5">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Width="400" Grid.Column="0" Text="{moneyChestView:MultiLangBinding RepayDebtEvent_Plural}"
                                   VerticalAlignment="Center" Margin="10" Foreground="{DynamicResource IdealForegroundColorBrush}"  FontSize="{DynamicResource DefaultFontSize}"/>

                        <ContentControl Template="{StaticResource EventButtonsPanel}" Margin="0" Grid.Column="1"/>
                    </Grid>
                </Expander.Header>
                <Expander.Content>
                    <!-- Repay Debt Events grid -->
                    <DataGrid x:Name="GridRepayDebtEvents" ContextMenu="{StaticResource EventContextMenu}">
                        <DataGrid.Columns>

                            <DataGridTextColumn Binding="{Binding EventStateDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding EventState_EnumName}" />

                            <DataGridTextColumn Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Description}" />

                            <DataGridTextColumn Binding="{Binding Debt.Description, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Debt_Singular}" />

                            <DataGridTextColumn Binding="{Binding ResultValueSignCurrency, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Amount}"/>

                            <DataGridTextColumn Binding="{Binding ScheduleDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Event_Schedule}"/>

                            <DataGridTextColumn Binding="{Binding Remark, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Remark}" />

                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource EventsRowStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Debt.DebtType}" Value="{x:Static enums:DebtType.GiveBorrow}">
                                        <Setter Property="Foreground" Value="{DynamicResource GreenBrush}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Debt.DebtType}" Value="{x:Static enums:DebtType.TakeBorrow}">
                                        <Setter Property="Foreground" Value="{DynamicResource RedBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MCDataGridCellStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Debt.DebtType}" Value="{x:Static enums:DebtType.GiveBorrow}">
                                        <Setter Property="Foreground" Value="{DynamicResource GreenBrush}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Debt.DebtType}" Value="{x:Static enums:DebtType.TakeBorrow}">
                                        <Setter Property="Foreground" Value="{DynamicResource RedBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                </Expander.Content>
            </Expander>
        </Border>

        <!-- Limits expander -->
        <Expander x:Name="ExpanderLimits" Grid.Column="1" Grid.RowSpan="4" Expanded="ExpanderLimits_Expanded"
                  Header="{moneyChestView:MultiLangBinding Limit_Plural}">
            <Expander.Style>
                <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource MCRightEntitiesExpanderStyle}">
                    <Style.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Width" Value="{Binding ActualWidth, Converter={StaticResource PctConverter}, 
                                RelativeSource={RelativeSource AncestorType={x:Type Grid}}, ConverterParameter=0.5,
                                UpdateSourceTrigger=PropertyChanged}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Expander.Style>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <!-- Menu -->
                <ToolBarTray>
                    <ToolBar>
                        <Button Command="{Binding AddCommand}" ToolTip="{moneyChestView:MultiLangBinding General_Add}">
                            <iconpacks:PackIconMaterial Kind="Plus"/>
                        </Button>

                        <Button Command="{Binding EditCommand}" ToolTip="{moneyChestView:MultiLangBinding General_Edit}">
                            <iconpacks:PackIconModern Kind="Edit"/>
                        </Button>

                        <Button Command="{Binding DeleteCommand}" ToolTip="{moneyChestView:MultiLangBinding General_Delete}">
                            <iconpacks:PackIconModern Kind="Delete"/>
                        </Button>

                        <Separator/>
                        <Button Command="{Binding RemoveClosedCommand}" ToolTip="{moneyChestView:MultiLangBinding Limit_RemoveClosed}">
                            <iconpacks:PackIconModern Kind="Clean" />
                        </Button>
                    </ToolBar>
                </ToolBarTray>

                <!-- Limits grid -->
                <DataGrid x:Name="GridLimits" Grid.Row="1">
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{moneyChestView:MultiLangBinding General_Add}" Command="{Binding AddCommand}"/>
                            <MenuItem Header="{moneyChestView:MultiLangBinding General_Edit}" Command="{Binding EditCommand}"/>
                            <MenuItem Header="{moneyChestView:MultiLangBinding General_Delete}" Command="{Binding DeleteCommand}"/>
                            <Separator/>
                            <MenuItem Header="{moneyChestView:MultiLangBinding Limit_RemoveClosed}" Command="{Binding RemoveClosedCommand}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>

                        <DataGridTextColumn Binding="{Binding State, Converter={StaticResource ESConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                            Header="{moneyChestView:MultiLangBinding LimitState_EnumName}"/>
                        
                        <DataGridTextColumn Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" 
                                            Header="{moneyChestView:MultiLangBinding General_Description}" />
                        
                        <DataGridTextColumn Binding="{Binding DateFrom, UpdateSourceTrigger=PropertyChanged, StringFormat=d}"
                                            Header="{moneyChestView:MultiLangBinding General_DateFrom}"/>
                        <DataGridTextColumn Binding="{Binding DateUntil, UpdateSourceTrigger=PropertyChanged, StringFormat=d}"
                                            Header="{moneyChestView:MultiLangBinding General_DateUntil}"/>

                        <DataGridTextColumn Binding="{Binding RemainingPercentValueCurrency, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Limit_RemainingValue}"/>

                        <DataGridTextColumn Binding="{Binding Category.Name, UpdateSourceTrigger=PropertyChanged}"
                                            Header="{moneyChestView:MultiLangBinding Category_Singular}" />
                        <DataGridTextColumn Binding="{Binding Remark, UpdateSourceTrigger=PropertyChanged}"
                                            Header="{moneyChestView:MultiLangBinding General_Remark}" />
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MCDataGridRowStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding State, Converter={StaticResource EBConverter}, 
                                    ConverterParameter={x:Static enums:LimitState.Active}}" Value="False">
                                    <Setter Property="Opacity" Value="0.5" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsExceeded}" Value="true">
                                    <Setter Property="Foreground" Value="{DynamicResource RedBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
            </Grid>
        </Expander>
    </Grid>
</local:PageBase>

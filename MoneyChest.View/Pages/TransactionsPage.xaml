<local:PageBase x:Class="MoneyChest.View.Pages.TransactionsPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MoneyChest.View.Pages"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:moneyChestView="clr-namespace:MoneyChest.View"
             xmlns:converters="clr-namespace:MoneyChest.View.Converters"
             xmlns:enums="clr-namespace:MoneyChest.Model.Enums;assembly=MoneyChest.Model"
             xmlns:components="clr-namespace:MoneyChest.View.Components"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <local:PageBase.Resources>
        <converters:EnumToBoolConverter x:Key="EBConverter"/>
        <converters:EnumToStringConverter x:Key="ESConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BVConverter"/>
        <system:Double x:Key="PeriodSelectorHeight">35</system:Double>
        <Style x:Key="PeriodButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MCButtonStyle}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="{StaticResource PeriodSelectorHeight}"/>
            <Setter Property="TextBlock.FontWeight" Value="Normal"/>
        </Style>
    </local:PageBase.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        
        <!-- Menu -->
        <ToolBarTray Grid.Column="0" ClipToBounds="True" VerticalAlignment="Top" IsLocked="True"
                     Background="{DynamicResource MaterialDesignToolBarBackground}" Grid.ColumnSpan="2">
            <ToolBar Style="{DynamicResource MaterialDesignToolBar}">
                
                <Button ToolTip="{moneyChestView:MultiLangBinding General_Add}" Style="{DynamicResource ToolBarButtonBaseStyle}"
                                    Height="{DynamicResource ToolBarButtonSize}" Width="{DynamicResource ToolBarButtonSize}">
                    <materialDesign:PopupBox PlacementMode="BottomAndAlignLeftEdges" StaysOpen="False"
                                             HorizontalAlignment="Left" VerticalAlignment="Center" 
                                             Foreground="{DynamicResource IdealForegroundColorBrush}"
                                             Style="{DynamicResource MaterialDesignPopupBox}" Margin="0">
                        <materialDesign:PopupBox.ToggleContent>
                            <Grid Background="Transparent" Height="34" Width="34">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <iconPacks:PackIconMaterial Kind="Plus"/>
                                </Grid>
                            </Grid>
                        </materialDesign:PopupBox.ToggleContent>

                        <StackPanel>
                            <Button Command="{Binding AddRecordCommand}" ToolTip="{moneyChestView:MultiLangBinding Record_Add}"
                                Height="{DynamicResource ToolBarButtonSize}"
                                Content="{moneyChestView:MultiLangBinding Record_Singular}"/>

                            <Button Command="{Binding AddMoneyTransferCommand}" ToolTip="{moneyChestView:MultiLangBinding MoneyTransfer_Add}"
                                Height="{DynamicResource ToolBarButtonSize}"
                                Content="{moneyChestView:MultiLangBinding MoneyTransfer_Singular}"/>
                        </StackPanel>
                    </materialDesign:PopupBox>
                </Button>

                <Button Command="{Binding AddChequeCommand}" ToolTip="{moneyChestView:MultiLangBinding Transactions_AddCheque}" 
                        Height="{DynamicResource ToolBarButtonSize}" Width="{DynamicResource ToolBarButtonSize}">
                    <iconPacks:PackIconModern Kind="AddMultiple" />
                </Button>

                <Button Command="{Binding EditCommand}" ToolTip="{moneyChestView:MultiLangBinding General_Edit}" 
                        Height="{DynamicResource ToolBarButtonSize}" Width="{DynamicResource ToolBarButtonSize}">
                    <iconPacks:PackIconModern Kind="Edit"/>
                </Button>

                <Button Command="{Binding DeleteCommand}" ToolTip="{moneyChestView:MultiLangBinding General_Delete}" 
                        Height="{DynamicResource ToolBarButtonSize}" Width="{DynamicResource ToolBarButtonSize}">
                    <iconPacks:PackIconModern Kind="Delete"/>
                </Button>

                <Separator/>
                <ToggleButton IsChecked="{Binding DataFilter.IsFilterApplied, UpdateSourceTrigger=PropertyChanged}" 
                              ToolTip="{moneyChestView:MultiLangBinding General_Filter}"
                              Height="{DynamicResource ToolBarButtonSize}" Width="{DynamicResource ToolBarButtonSize}">
                    <iconPacks:PackIconModern Kind="Filter" />
                </ToggleButton>
            </ToolBar>
        </ToolBarTray>
        
        <!-- Period selector -->
        <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center">
            <Button Height="{StaticResource PeriodSelectorHeight}" Width="{StaticResource PeriodSelectorHeight}" Margin="0"
                    Command="{Binding PrevDateRangeCommand}" BorderThickness="0" Style="{StaticResource PeriodButtonStyle}">
                <iconPacks:PackIconOcticons Kind="ChevronLeft" Height="Auto" Width="Auto"/>
            </Button>

            <materialDesign:ColorZone Mode="PrimaryMid" Background="{DynamicResource GrayBrush7}" Height="34" Width="200"
                                      Foreground="{DynamicResource BlackBrush}" Margin="0 1 0 0">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" HorizontalAlignment="Center" Margin="5 0 0 0" Text="{Binding PeriodFilter.PeriodDetails}" FontSize="{DynamicResource DefaultFontSize}" VerticalAlignment="Center"/>

                    <materialDesign:PopupBox x:Name="periodPopup" Grid.Column="1" PlacementMode="BottomAndAlignLeftEdges"
                                             StaysOpen="False"
                                             HorizontalAlignment="Right" VerticalAlignment="Center" 
                                             Foreground="{DynamicResource BlackBrush}"
                                             Style="{DynamicResource MaterialDesignPopupBox}">
                        <StackPanel MinWidth="100">
                            <RadioButton Content="{moneyChestView:MultiLangBinding PeriodType_Day}" IsChecked="{Binding PeriodFilter.PeriodType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:PeriodType.Day}}" GroupName="PeriodType"/>

                            <RadioButton Content="{moneyChestView:MultiLangBinding PeriodType_Week}" IsChecked="{Binding PeriodFilter.PeriodType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:PeriodType.Week}}" GroupName="PeriodType"/>

                            <RadioButton Content="{moneyChestView:MultiLangBinding PeriodType_Month}" IsChecked="{Binding PeriodFilter.PeriodType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:PeriodType.Month}}" GroupName="PeriodType"/>

                            <RadioButton Content="{moneyChestView:MultiLangBinding PeriodType_Quarter}" IsChecked="{Binding PeriodFilter.PeriodType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:PeriodType.Quarter}}" GroupName="PeriodType"/>

                            <RadioButton Content="{moneyChestView:MultiLangBinding PeriodType_Year}" IsChecked="{Binding PeriodFilter.PeriodType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:PeriodType.Year}}" GroupName="PeriodType"/>

                            <Separator/>
                            <RadioButton IsChecked="{Binding PeriodFilter.PeriodType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:PeriodType.Custom}}"
                                                 Content="{moneyChestView:MultiLangBinding PeriodType_Custom}" GroupName="PeriodType"
                                                 Command="{Binding SelectDateRangeCommand}"/>
                        </StackPanel>
                    </materialDesign:PopupBox>
                </Grid>
            </materialDesign:ColorZone>

            <Button Height="{StaticResource PeriodSelectorHeight}" Width="{StaticResource PeriodSelectorHeight}" Margin="0"
                    Command="{Binding NextDateRangeCommand}" BorderThickness="0" Style="{StaticResource PeriodButtonStyle}">
                <iconPacks:PackIconOcticons Kind="ChevronRight" Height="Auto" Width="Auto"/>
            </Button>
        </StackPanel>

        <!-- Transactions grid -->
        <DataGrid x:Name="GridTransactions" Grid.Row="2" Grid.Column="0"
                  Margin="5"
                  AutoGenerateColumns="False"
                  HeadersVisibility="Column"
                  SelectionUnit="FullRow"
                  IsReadOnly="True"
                  ItemsSource="{Binding FilteredEntities}">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{moneyChestView:MultiLangBinding General_Add}">
                        <MenuItem Header="{moneyChestView:MultiLangBinding Record_Singular}" Command="{Binding AddRecordCommand}"
                                  ToolTip="{moneyChestView:MultiLangBinding Record_Add}"/>
                        <MenuItem Header="{moneyChestView:MultiLangBinding MoneyTransfer_Singular}" 
                                  Command="{Binding AddMoneyTransferCommand}" 
                                  ToolTip="{moneyChestView:MultiLangBinding MoneyTransfer_Add}"/>
                    </MenuItem>
                    <MenuItem Header="{moneyChestView:MultiLangBinding General_Edit}" Command="{Binding EditCommand}"/>
                    <MenuItem Header="{moneyChestView:MultiLangBinding General_Delete}" Command="{Binding DeleteCommand}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <!-- TODO: Add type icon -->
                <!--<DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl ToolTip="{moneyChestView:MultiLangBinding Currency_IsMain}">
                                <iconPacks:PackIconMaterial Name="Picture" Visibility="Hidden" Kind="Star"/>
                            </ContentControl>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsMain}" Value="True">
                                    <Setter TargetName="Picture" Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->

                <!-- TODO: remove-->
                <DataGridTextColumn Binding="{Binding TransactionType, Converter={StaticResource ESConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Header="Transaction type"/>

                <DataGridTextColumn Binding="{Binding TransactionDate, UpdateSourceTrigger=PropertyChanged, StringFormat=d}" Header="{moneyChestView:MultiLangBinding General_Date}" />

                <DataGridTextColumn Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Description}" />

                <DataGridTextColumn Binding="{Binding TransactionValueDetailed, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Amount}" />

                <DataGridTextColumn Binding="{Binding TransactionStorage, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Storage_Singular}" />

                <DataGridTextColumn Binding="{Binding TransactionCategory.Name, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding Category_Singular}" />

                <DataGridTextColumn Binding="{Binding Remark, UpdateSourceTrigger=PropertyChanged}" Header="{moneyChestView:MultiLangBinding General_Remark}" />
                
            </DataGrid.Columns>
            <DataGrid.RowStyle>
                <Style BasedOn="{StaticResource MCDataGridRowStyle}" TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlanned}" Value="True">
                            <Setter Property="Opacity" Value="0.5" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsIncome}" Value="True">
                            <Setter Property="Foreground" Value="Green" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsExpense}" Value="True">
                            <Setter Property="Foreground" Value="Red" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
        
        <!-- Filter -->
        <components:DataFilterControl Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" 
                                      DataFilter="{Binding DataFilter, UpdateSourceTrigger=PropertyChanged}"/>
        <!--<GroupBox Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" 
                  Visibility="{Binding DataFilter.IsFilterApplied, Converter={StaticResource BVConverter}}">
            <GroupBox.Header>
                <TextBlock Text="{moneyChestView:MultiLangBinding General_Filter}"
                              Foreground="{DynamicResource IdealForegroundColorBrush}" Margin="5 0 0 0"/>
            </GroupBox.Header>
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    --><!-- Description --><!--
                    <StackPanel Orientation="Horizontal" Grid.Row="0">
                        <iconPacks:PackIconMaterial Kind="Label" Style="{DynamicResource TextBoxIconStyle}"/>
                        <TextBox materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_Description}" 
                                     Text="{Binding DataFilter.Description, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True}"/>
                    </StackPanel>

                    --><!-- Category -->
                    <!--<components:CategorySelector VerticalAlignment="Center" ShowEmptyCategory="True"
                                         SelectedCategoryId="{Binding CategoryId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->

                    <!-- Remark --><!--
                    <StackPanel Orientation="Horizontal" Grid.Row="1">
                        <iconPacks:PackIconModern Kind="TagLabel" Style="{DynamicResource TextBoxMultilineIconStyle}"/>
                        <TextBox Style="{DynamicResource HintMultilineTextBoxStyle}"
                                     materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_Remark}" 
                                     Text="{Binding DataFilter.Remark, UpdateSourceTrigger=PropertyChanged}" Margin="5 5 5 0"/>
                    </StackPanel>

                    --><!-- Transaction type --><!--
                    <GroupBox Grid.Row="2" Margin="5 15 5 5">
                        <GroupBox.Header>
                            <CheckBox Content="{moneyChestView:MultiLangBinding TransactionType_EnumName}"
                                  Foreground="{DynamicResource IdealForegroundColorBrush}" Margin="5 0 0 0"
                                  IsChecked="{Binding DataFilter.IsTransactionTypeFiltered}"/>
                        </GroupBox.Header>
                        <StackPanel IsEnabled="{Binding DataFilter.IsTransactionTypeFiltered}">
                            <RadioButton Content="{moneyChestView:MultiLangBinding TransactionType_Expense}"
                                     ToolTip="{moneyChestView:MultiLangBinding TransactionType_Expense}"
                         IsChecked="{Binding DataFilter.TransactionType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:TransactionType.Expense}}"/>

                            <RadioButton Content="{moneyChestView:MultiLangBinding TransactionType_Income}"
                                     ToolTip="{moneyChestView:MultiLangBinding TransactionType_Income}"
                         IsChecked="{Binding DataFilter.TransactionType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:TransactionType.Income}}"/>

                            <RadioButton Content="{moneyChestView:MultiLangBinding TransactionType_MoneyTransfer}"
                                     ToolTip="{moneyChestView:MultiLangBinding TransactionType_MoneyTransfer}"
                         IsChecked="{Binding DataFilter.TransactionType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:TransactionType.MoneyTransfer}}"/>
                        </StackPanel>
                    </GroupBox>
                    
                    --><!-- Storages expander -->
                    <!--<Expander Grid.Row="3" ExpandDirection="Down" 
                              Background="{DynamicResource AccentColorBrush}" BorderThickness="0" IsExpanded="False" Padding="0">
                        <Expander.Header>
                            <StackPanel Orientation="Horizontal">
                                <iconPacks:PackIconMaterial Kind="Bank" Style="{DynamicResource TextBoxIconStyle}"/>
                                <TextBlock Foreground="{DynamicResource IdealForegroundColorBrush}" Margin="5 0 0 0" VerticalAlignment="Center"
                                           Text="{moneyChestView:MultiLangBinding Storage_Plural}"/>
                            </StackPanel>
                        </Expander.Header>
                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
                            <Grid>
                                <TreeView ItemsSource="{Binding Categories, 
                    RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CategorySelector}}}"
                                  ItemContainerStyle="{DynamicResource CategoryTreeViewSelectableItemContainerStyle}"
                                  ItemTemplate="{DynamicResource CategoryTreeViewItemTemplate}">
                                </TreeView>
                            </Grid>
                        </ScrollViewer>
                    </Expander>-->

                    <!-- Categories expander --><!--
                    <Expander Grid.Row="4" ExpandDirection="Down" Margin="5" Focusable="False"
                              Background="{DynamicResource AccentColorBrush}" BorderThickness="1" IsExpanded="False" Padding="0">
                        <Expander.Header>
                            <StackPanel Orientation="Horizontal" Margin="5">
                                --><!--<iconPacks:PackIconEntypo Kind="FlowTree" Style="{DynamicResource TextBoxIconStyle}"/>--><!--
                                <TextBlock Foreground="{DynamicResource IdealForegroundColorBrush}" VerticalAlignment="Center"
                                           Text="{moneyChestView:MultiLangBinding Category_Plural}"/>
                                --><!-- TODO: show selected categories count--><!--
                            </StackPanel>
                        </Expander.Header>
                        <Grid>
                            <TreeView ItemsSource="{Binding Categories}"
                                  ItemContainerStyle="{DynamicResource CategoryTreeViewCheckableItemContainerStyle}"
                                  ItemTemplate="{DynamicResource CheckableCategoryTreeViewItemTemplate}">
                            </TreeView>
                        </Grid>
                    </Expander>
                </Grid>
            </ScrollViewer>
        </GroupBox>-->
    </Grid>
</local:PageBase>

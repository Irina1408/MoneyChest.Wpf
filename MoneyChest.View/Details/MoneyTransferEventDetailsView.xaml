<local:MoneyTransferEventDetailsViewBase x:Class="MoneyChest.View.Details.MoneyTransferEventDetailsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MoneyChest.View.Details"
             xmlns:moneyChestView="clr-namespace:MoneyChest.View"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
	         xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:viewModel="clr-namespace:MoneyChest.ViewModel.ViewModel;assembly=MoneyChest.ViewModel"
             xmlns:converters="clr-namespace:MoneyChest.View.Converters"
             xmlns:enums="clr-namespace:MoneyChest.Model.Enums;assembly=MoneyChest.Model"
             xmlns:components="clr-namespace:MoneyChest.View.Components"
                                         xmlns:input="clr-namespace:MoneyChest.View.Components.Input"
                                         mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <converters:EnumToBoolConverter x:Key="EBConverter"/>
        <converters:EnumToVisibilityConverter x:Key="EVConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BVConverter"/>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Label x:Name="LabelHeader" Grid.Row="0" Grid.ColumnSpan="2"
               FontSize="{DynamicResource LargeFontSize}" HorizontalAlignment="Center"/>

        <!-- Main part -->
        <Grid Grid.Column="0" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Storages and value -->
            <Grid Grid.Row="0" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Storage from -->
                <ComboBox x:Name="comboFromStorage" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" Margin="5"
                          SelectedValue="{Binding StorageFromId}" DisplayMemberPath="NameValue" SelectedValuePath="Id"
                          materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding MoneyTransfer_StorageFrom}"
                          SelectionChanged="comboStorage_SelectionChanged" Width="220">
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource MaterialDesignComboBoxItemSelectedCollapsedStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsVisible}" Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>

                <!-- Arrow -->
                <iconPacks:PackIconOcticons Kind="ArrowRight" Grid.Column="1" Grid.Row="0" Height="30" Width="36"/>

                <!-- Storage to -->
                <ComboBox x:Name="comboToStorage"  Grid.Column="2" Grid.Row="0" HorizontalAlignment="Right" Margin="5"
                          SelectedValue="{Binding StorageToId}" DisplayMemberPath="NameValue" SelectedValuePath="Id"
                          materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding MoneyTransfer_StorageTo}"
                          SelectionChanged="comboStorage_SelectionChanged" Width="220">
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource MaterialDesignComboBoxItemSelectedCollapsedStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsVisible}" Value="false">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>

                <!-- Value that should be taken from Storage from -->
                <TextBox Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" Margin="5 5 10 5" Width="220"
                         materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_Amount}"
                         Text="{Binding StorageFromValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True, StringFormat={}{0:0.##}}"/>

                <!-- Arrow -->
                <iconPacks:PackIconOcticons Kind="ArrowRight" Grid.Column="1" Grid.Row="1" Height="30" Width="36"/>

                <!-- Value that should be taken from Storage to -->
                <TextBox Grid.Column="2" Grid.Row="1" HorizontalAlignment="Right" Margin="10 5 5 5" Width="220"
                         materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_Amount}"
                         Text="{Binding StorageToValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True, StringFormat={}{0:0.##}}"/>
            </Grid>

            <!-- Definition part (Description, Category, Remark) -->
            <StackPanel Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" Margin="5 20 0 0" VerticalAlignment="Top">

                <!-- Description -->
                <input:DescriptionInput Description="{Binding Description, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                <!-- Category -->
                <components:CategorySelector HorizontalAlignment="Left" VerticalAlignment="Center"
                                         SelectedCategoryId="{Binding CategoryId, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ShowEmptyCategory="True"/>

                <!-- Remark -->
                <input:RemarkInput Remark="{Binding Remark, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                <StackPanel VerticalAlignment="Center" Margin="0 10 0 0">
                    <!-- Auto Execution -->
                    <CheckBox Content="{moneyChestView:MultiLangBinding Event_AutoExecution}" IsChecked="{Binding AutoExecution}"
                              VerticalAlignment="Center"/>

                    <!-- Confirm Before Execute -->
                    <CheckBox Content="{moneyChestView:MultiLangBinding Event_ConfirmBeforeExecute}" 
                      ToolTip="{moneyChestView:MultiLangBinding Event_ConfirmBeforeExecuteDetailed}" 
                      IsChecked="{Binding ConfirmBeforeExecute}" IsEnabled="{Binding AutoExecution}" VerticalAlignment="Center"/>
                </StackPanel>
            </StackPanel>

            <!-- Currency exchange rate -->
            <components:CurrencyExchangeRateControl x:Name="compCurrencyExchangeRate" Grid.Column="1" Grid.Row="1" Margin="5 20 5 0"
                              ShowTakeExisting="True" 
                              CurrencyFromId="{Binding StorageFromCurrency.Id}" CurrencyToId="{Binding StorageToCurrency.Id}"
                              CurrencyExchangeRate="{Binding CurrencyExchangeRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                              TakeExistingCurrencyExchangeRate="{Binding TakeExistingCurrencyExchangeRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <!-- Comission -->
            <components:CommissionControl Grid.Column="1" Grid.Row="2" Margin="5 10 5 5" ShowTakeCommissionFromReceiver="True"
                                          CurrencySymbol="{Binding StorageFromCurrency.Symbol}"/>
        </Grid>

        <!-- Part "Schedule" -->
        <components:ScheduleControl Grid.Row="1" Grid.Column="1"
                                    SelectedMonths="{Binding Schedule.Months}"
                                    SelectedDaysOfWeek="{Binding Schedule.DaysOfWeek}"/>

        <!-- Ok/Cancel buttons -->
        <components:DetailsViewCommandsPanel x:Name="CommandsPanel"  Grid.Row="2" Grid.ColumnSpan="2"/>
    </Grid>
</local:MoneyTransferEventDetailsViewBase>

<local:DebtDetailsViewBase x:Class="MoneyChest.View.Details.DebtDetailsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MoneyChest.View.Details"
             xmlns:moneyChestView="clr-namespace:MoneyChest.View"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
	         xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:MoneyChest.View.Converters"
             xmlns:enums="clr-namespace:MoneyChest.Model.Enums;assembly=MoneyChest.Model"
                           xmlns:components="clr-namespace:MoneyChest.View.Components"
                           mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <converters:EnumToBoolConverter x:Key="EBConverter"/>
        
        <ControlTemplate x:Key="PenaltyItemControlTemplate" TargetType="{x:Type ContentControl}">
            <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="0.5" Padding="5" Margin="0 2 0 0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0">
                        <!-- Date -->
                        <DatePicker SelectedDate="{Binding Date}" materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_Date}"/>

                        <!-- Description -->
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconMaterial Kind="Label" Style="{DynamicResource TextBoxIconStyle}"/>
                            <TextBox materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_Description}" 
                                     Text="{Binding Description, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True}"/>
                        </StackPanel>

                        <!-- Value -->
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconModern Kind="Money" Style="{DynamicResource TextBoxIconStyle}"/>
                            <TextBox materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_Amount}"
                                     Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True, StringFormat={}{0:0.##}}"/>
                        </StackPanel>
                    </StackPanel>

                    <Button Grid.Column="1" Command="{Binding DeleteCommand}"
                        CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}"
                        ToolTip="{moneyChestView:MultiLangBinding General_Delete}"
                        Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top">

                        <iconPacks:PackIconModern Kind="Delete"/>
                    </Button>
                </Grid>
            </Border>
        </ControlTemplate>
        
    </UserControl.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Header -->
        <StackPanel Grid.Row="0" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Center">
            <Label x:Name="LabelHeader" FontSize="{DynamicResource LargeFontSize}"/>
            <RadioButton Content="{moneyChestView:MultiLangBinding DebtType_TakeBorrow}" GroupName="1"
                         IsChecked="{Binding DebtType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:DebtType.TakeBorrow}}"/>
            <RadioButton Content="{moneyChestView:MultiLangBinding DebtType_GiveBorrow}" GroupName="1"
                         IsChecked="{Binding DebtType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:DebtType.GiveBorrow}}"/>
        </StackPanel>

        <!-- Part "Value and details"-->
        <StackPanel Grid.Row="1" Grid.Column="0" Margin="5">
            <!-- Date -->
            <DatePicker SelectedDate="{Binding TakingDate}" materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_Date}"/>
            
            <!-- Due date -->
            <DatePicker SelectedDate="{Binding DueDate}" materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding Debt_DueDate}"/>
            
            <!-- Value -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                <iconPacks:PackIconModern Kind="Money" Style="{DynamicResource TextBoxIconStyle}"/>
                <TextBox materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_Amount}"
                                     Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True, StringFormat={}{0:0.##}}"/>
            </StackPanel>

            <!-- Currency -->
            <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Stretch">
                <iconPacks:PackIconModern Kind="CurrencyDollar" Style="{DynamicResource TextBoxIconStyle}"/>
                <ComboBox x:Name="comboCurrencies" 
                          materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding Currency_Singular}"
                          DisplayMemberPath="Name" SelectedValuePath="Id"
                          SelectedValue="{Binding CurrencyId}"
                          SelectionChanged="comboCurrencies_SelectionChanged"/>
            </StackPanel>
            
            <!-- Initial fee -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                <iconPacks:PackIconModern Kind="Money" Style="{DynamicResource TextBoxIconStyle}"/>
                <TextBox materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding Debt_InitialFee}"
                                     Text="{Binding InitialFee, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True, StringFormat={}{0:0.##}}"/>
            </StackPanel>

            <!-- Description -->
            <StackPanel Orientation="Horizontal">
                <iconPacks:PackIconMaterial Kind="Label" Style="{DynamicResource TextBoxIconStyle}"/>
                <TextBox materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_Description}" 
                                     Text="{Binding Description, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True}"/>
            </StackPanel>

            <!-- Category -->
            <components:CategorySelector HorizontalAlignment="Right" VerticalAlignment="Center"
                                         SelectedCategoryId="{Binding CategoryId}" ShowEmptyCategory="True"/>

            <!-- Remark -->
            <StackPanel Orientation="Horizontal">
                <iconPacks:PackIconModern Kind="TagLabel" Style="{DynamicResource TextBoxMultilineIconStyle}"/>
                <TextBox Style="{DynamicResource HintMultilineTextBoxStyle}"
                                     materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_Remark}" 
                                     Text="{Binding Remark, UpdateSourceTrigger=PropertyChanged}" Margin="5 5 5 0"/>
            </StackPanel>
        </StackPanel>

        <!-- Part "Value to be paid and Storage" -->
        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Value to be paid -->
            <StackPanel Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Text="{moneyChestView:MultiLangBinding Debt_ValueToBePaid}" Margin="0 0 10 0" HorizontalAlignment="Center"/>
                <TextBlock Text="{Binding ValueToBePaidCurrency}" FontSize="{DynamicResource LargeFontSize}" HorizontalAlignment="Center"/>
                <!-- TODO: add RemainsToPay value-->
            </StackPanel>
            
            <!-- Storage -->
            <GroupBox Grid.Row="1">
                <GroupBox.Header>
                    <TextBlock Foreground="{DynamicResource IdealForegroundColorBrush}" Margin="5 0 0 0">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="{moneyChestView:MultiLangBinding General_TargetStorage}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DebtType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:DebtType.TakeBorrow}}" Value="false">
                                        <Setter Property="Text" Value="{moneyChestView:MultiLangBinding General_WithdrawStorage}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </GroupBox.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Storage -->
                    <ComboBox x:Name="comboStorage" Grid.Row="0"
                              SelectedValue="{Binding StorageId}" DisplayMemberPath="NameValue" SelectedValuePath="Id"
                              materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding Storage_Singular}"
                              SelectionChanged="comboStorage_SelectionChanged" Background="{DynamicResource WhiteBrush}"/>

                    <!-- TakeInitialFeeFromStorage -->
                    <!--<CheckBox Grid.Row="1" IsChecked="{Binding TakeInitialFeeFromStorage}">
                        <CheckBox.Style>
                            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MCCheckBoxStyle}">
                                <Setter Property="Content" Value="{moneyChestView:MultiLangBinding Debt_AddInitialFeeToStorage}"/>
                                <Setter Property="ToolTip" Value="{moneyChestView:MultiLangBinding Debt_AddInitialFeeToStorage}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DebtType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:DebtType.TakeBorrow}}" Value="false">
                                        <Setter Property="Content" Value="{moneyChestView:MultiLangBinding Debt_TakeInitialFeeFromStorage}"/>
                                        <Setter Property="ToolTip" Value="{moneyChestView:MultiLangBinding Debt_TakeInitialFeeFromStorage}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>-->

                    <!-- Currency exchange rate -->
                    <GroupBox Grid.Row="2" Margin="5" IsEnabled="{Binding IsDifferentCurrenciesSelected}">
                        <GroupBox.Header>
                            <TextBlock Text="{moneyChestView:MultiLangBinding General_ExchangeRate}"
                              Foreground="{DynamicResource IdealForegroundColorBrush}" Margin="5 0 0 0"/>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Example -->
                            <TextBlock Grid.Row="0" Text="{Binding ExchangeRateExample}" FontSize="{DynamicResource LargeFontSize}"
                               Foreground="{DynamicResource BlackBrush}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsDifferentCurrenciesSelected}" Value="false">
                                                <Setter Property="Opacity" Value="0.5"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <!-- Rate -->
                            <TextBox Grid.Row="1" materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding CurrencyExchangeRate_Rate}"
                                     Text="{Binding CurrencyExchangeRate, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True, StringFormat={}{0:0.####}}" Margin="5 10 5 10" Width="Auto"/>
                        </Grid>
                    </GroupBox>
                </Grid>
            </GroupBox>
        </Grid>

        <!-- Payment conditions -->
        <GroupBox Grid.Row="1" Grid.Column="2">
            <GroupBox.Header>
                <TextBlock Text="{moneyChestView:MultiLangBinding Debt_PaymentConditions}"
                              Foreground="{DynamicResource IdealForegroundColorBrush}" Margin="5 0 0 0"/>
            </GroupBox.Header>
            <StackPanel>
                <RadioButton Content="{moneyChestView:MultiLangBinding Debt_PaymentConditions_FixedAdditionalAmount}" 
                             IsChecked="{Binding PaymentType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:DebtPaymentType.FixedAmount}}" GroupName="2" Margin="0 5 0 5"/>

                <StackPanel Margin="10 0 0 0" IsEnabled="{Binding PaymentType, 
                    Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:DebtPaymentType.FixedAmount}}">
                    <!-- Value -->
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconModern Kind="Money" Style="{DynamicResource TextBoxIconStyle}"/>
                        <TextBox materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_Amount}"
                                     Text="{Binding FixedAmount, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True, StringFormat={}{0:0.##}}"/>
                    </StackPanel>
                </StackPanel>

                <RadioButton Content="{moneyChestView:MultiLangBinding Debt_PaymentConditions_InterestRate}" IsChecked="{Binding PaymentTypeIsRate}" GroupName="2" Margin="0 30 0 5"/>

                <StackPanel Margin="10 0 0 0" IsEnabled="{Binding PaymentTypeIsRate}">
                    <!-- Rate -->
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconFontAwesome Kind="Percent" Style="{DynamicResource TextBoxIconStyle}"/>
                        <TextBox materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding Debt_PaymentConditions_InterestRate}"
                                     Text="{Binding InterestRate, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True, StringFormat={}{0:0.####}}"/>
                    </StackPanel>

                    <!-- Fixed/Annual -->
                    <StackPanel Orientation="Horizontal" Margin="10 20 0 0">
                        <RadioButton Content="{moneyChestView:MultiLangBinding Debt_PaymentConditions_InterestRate_Fixed}" IsChecked="{Binding PaymentType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:DebtPaymentType.FixedRate}}" GroupName="3"/>
                        <RadioButton Content="{moneyChestView:MultiLangBinding Debt_PaymentConditions_InterestRate_Annual}" IsChecked="{Binding PaymentTypeIsAnnualRate}" GroupName="3"/>
                    </StackPanel>

                    <!-- For annual: Period, is annuity -->
                    <StackPanel IsEnabled="{Binding PaymentTypeIsAnnualRate}" Margin="10 0 0 0">
                        <!-- Month count -->
                        <StackPanel Orientation="Horizontal">
                            <TextBox materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding Debt_PaymentConditions_CreditingPeriod}" Text="{Binding MonthCount, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True, StringFormat=N0}" Width="150"/>

                            <TextBlock Text="{moneyChestView:MultiLangBinding General_Count_Monthes}" FontSize="{DynamicResource DefaultFontSize}" Margin="10 0 0 5" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                        </StackPanel>

                        <CheckBox Content="{moneyChestView:MultiLangBinding Debt_PaymentConditions_Annuity}" IsChecked="{Binding PaymentType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:DebtPaymentType.AnnuityPayment}}"/>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </GroupBox>
        
        <!-- Penalties -->
        <GroupBox Grid.Row="1" Grid.Column="3">
            <GroupBox.Header>
                <Grid Margin="-5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="{moneyChestView:MultiLangBinding DebtPenalty_Plural}"
                              Foreground="{DynamicResource IdealForegroundColorBrush}" Margin="10 5 5 5" HorizontalAlignment="Left"
                               VerticalAlignment="Center"/>

                    <Button Grid.Column="1" Command="{Binding AddPenaltyCommand}" ToolTip="{moneyChestView:MultiLangBinding General_Add}"
                            Style="{DynamicResource CircleButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center"
                            Foreground="{DynamicResource IdealForegroundColorBrush}" Height="24" Width="24" Margin="0 0 10 0">
                        <iconPacks:PackIconMaterial Kind="Plus" Margin="3" Height="14" Width="14"/>
                    </Button>
                </Grid>
            </GroupBox.Header>
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <Grid>
                    <StackPanel x:Name="PenaltiesPanel"/>
                </Grid>
            </ScrollViewer>
        </GroupBox>

        <!-- Ok/Cancel buttons -->
        <StackPanel x:Name="CommandsPanel" Grid.Row="2" Grid.ColumnSpan="4" Orientation="Horizontal" HorizontalAlignment="Right">
            <!-- TODO: create style for Ok/Cancel buttons -->
            <Button Content="{moneyChestView:MultiLangBinding General_Ok}" Command="{Binding SaveCommand}"
                    Style="{DynamicResource AccentedButtonStyle}"/>

            <Button Content="{moneyChestView:MultiLangBinding General_Cancel}" Command="{Binding CancelCommand}" IsCancel="True"/>
        </StackPanel>
    </Grid>
</local:DebtDetailsViewBase>

<local:RecordDetailsViewBase x:Class="MoneyChest.View.Details.RecordDetailsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MoneyChest.View.Details"
             xmlns:moneyChestView="clr-namespace:MoneyChest.View"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:converters="clr-namespace:MoneyChest.View.Converters"
             xmlns:enums="clr-namespace:MoneyChest.Model.Enums;assembly=MoneyChest.Model"
             xmlns:viewModel="clr-namespace:MoneyChest.ViewModel.ViewModel;assembly=MoneyChest.ViewModel"
	         xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:components="clr-namespace:MoneyChest.View.Components"
                             xmlns:input="clr-namespace:MoneyChest.View.Components.Input"
                             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <local:RecordDetailsViewBase.Resources>
        <converters:EnumToBoolConverter x:Key="EBConverter"/>
        <converters:EnumToVisibilityConverter x:Key="EVConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BVConverter"/>
    </local:RecordDetailsViewBase.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <!-- Header -->
        <StackPanel Grid.Row="0" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Center">
            <Label x:Name="LabelHeader" Style="{DynamicResource MCDetailsHeaderLabelStyle}"/>
            <RadioButton Content="{moneyChestView:MultiLangBinding RecordType_Expense}" GroupName="1"
                         IsChecked="{Binding RecordType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:RecordType.Expense}}" IsEnabled="{Binding IsTypeSelectionAllowed}"/>
            <RadioButton Content="{moneyChestView:MultiLangBinding RecordType_Income}" GroupName="1"
                         IsChecked="{Binding RecordType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:RecordType.Income}}" IsEnabled="{Binding IsTypeSelectionAllowed}"/>
        </StackPanel>

        <!-- Part "Description and Value" -->
        <Grid Grid.Row="1" Grid.Column="0" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0">
                <!-- Date -->
                <DatePicker SelectedDate="{Binding Date}" materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_Date}"/>

                <!-- Description -->
                <input:DescriptionInput Description="{Binding Description, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                <!-- Category -->
                <components:CategorySelector VerticalAlignment="Center" ShowEmptyCategory="True"
                                         SelectedCategoryId="{Binding CategoryId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <!-- Value -->
                <input:AmountInput Amount="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Stretch"/>

                <!-- Currency -->
                <components:CurrencySelector x:Name="CurrencySelector" 
                                             CurrencyId="{Binding CurrencyId, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                             CurrencyReference="{Binding Currency, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                             HorizontalAlignment="Stretch"/>

                <!-- Storage -->
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconMaterial Kind="Bank" Style="{DynamicResource TextBoxIconStyle}"/>
                    <ComboBox x:Name="comboStorage" 
                              SelectedValue="{Binding StorageId}" DisplayMemberPath="NameValue" SelectedValuePath="Id"
                              SelectionChanged="comboStorage_SelectionChanged">
                        <ComboBox.Style>
                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MCComboBoxFloatingHintStyle}">
                                <Setter Property="materialDesign:HintAssist.Hint" 
                                        Value="{moneyChestView:MultiLangBinding General_TargetStorage}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RecordType, Converter={StaticResource EBConverter}, ConverterParameter={x:Static enums:RecordType.Income}}" Value="false">
                                        <Setter Property="materialDesign:HintAssist.Hint" 
                                                Value="{moneyChestView:MultiLangBinding General_WithdrawStorage}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                </StackPanel>

                <!-- Debt -->
                <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Stretch">
                    <iconPacks:PackIconModern Kind="CalendarDollar" Style="{DynamicResource TextBoxIconStyle}"/>
                    <ComboBox x:Name="comboDebts" 
                          materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding Debt_Singular}"
                          DisplayMemberPath="DescriptionRemainsToPayCurrency" SelectedValuePath="Id"
                          SelectedValue="{Binding DebtId}"
                          SelectionChanged="comboDebt_SelectionChanged"/>
                </StackPanel>

                <!-- Remark -->
                <input:RemarkInput Remark="{Binding Remark, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
            </StackPanel>
        </Grid>

        <!-- Part "Result value and Commission" -->
        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Result value -->
            <StackPanel Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Text="{moneyChestView:MultiLangBinding General_ResultAmount}" Margin="0 0 10 0" HorizontalAlignment="Center"/>
                <TextBlock Text="{Binding ResultValueSignCurrency}" FontSize="{DynamicResource LargeFontSize}" HorizontalAlignment="Center"/>
                <!-- TODO: add value correspond to currency exchange rate -->
            </StackPanel>

            <!-- Comission -->
            <components:CommissionControl Grid.Row="1" Margin="5 10 5 5" ShowTakeCommissionFromReceiver="False"
                                          CurrencySymbol="{Binding Currency.Symbol}"/>

            <!-- Currency exchange rate -->
            <components:CurrencyExchangeRateControl x:Name="compCurrencyExchangeRate" Grid.Row="2" Margin="5"
                              ShowTakeExisting="False" CurrencyFromId="{Binding CurrencyId}" CurrencyToId="{Binding CurrencyIdForRate}"
                              CurrencyExchangeRate="{Binding CurrencyExchangeRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                              TakeExistingCurrencyExchangeRate="{Binding TakeExistingCurrencyExchangeRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>

        <!-- Ok/Cancel buttons -->
        <components:DetailsViewCommandsPanel x:Name="CommandsPanel" Grid.Row="2" Grid.ColumnSpan="3"/>
    </Grid>
</local:RecordDetailsViewBase>

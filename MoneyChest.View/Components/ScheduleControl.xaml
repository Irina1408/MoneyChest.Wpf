<UserControl x:Class="MoneyChest.View.Components.ScheduleControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MoneyChest.View.Components"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
	         xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:moneyChestView="clr-namespace:MoneyChest.View"
             xmlns:converters="clr-namespace:MoneyChest.View.Converters"
             xmlns:viewModel="clr-namespace:MoneyChest.ViewModel.ViewModel;assembly=MoneyChest.ViewModel"
             xmlns:enums="clr-namespace:MoneyChest.Model.Enums;assembly=MoneyChest.Model"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <converters:BoolToVisibilityConverter x:Key="BVConverter"/>
        <converters:EnumToVisibilityConverter x:Key="EVConverter"/>
    </UserControl.Resources>

    <!-- Required for binding: Schedule.ScheduleType, DateFrom, DateUntil, Schedule.IsDateRange, Schedule.Period, Schedule.DayOfMonth -->
    
    <GroupBox Grid.Row="1" Grid.Column="1">
        <GroupBox.Header>
            <TextBlock Foreground="{DynamicResource IdealForegroundColorBrush}" Margin="5 0 0 0"
                           Text="{moneyChestView:MultiLangBinding Event_Schedule}">
            </TextBlock>
        </GroupBox.Header>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Schedule type -->
            <StackPanel Orientation="Horizontal">
                <iconPacks:PackIconMaterial Kind="Timelapse" Style="{DynamicResource TextBoxIconStyle}"/>
                <ComboBox x:Name="comboScheduleTypes" HorizontalAlignment="Left"
                          materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding ScheduleType_EnumName}"
                          DisplayMemberPath="Description" SelectedValuePath="Value"
                          SelectedValue="{Binding Schedule.ScheduleType}" Background="{DynamicResource WhiteBrush}"/>
            </StackPanel>

            <!-- Date for Once schedule type -->
            <DatePicker SelectedDate="{Binding DateFrom}" Grid.Row="1" 
                            materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_Date}" 
                            Visibility="{Binding Schedule.ScheduleType, Converter={StaticResource EVConverter}, ConverterParameter={x:Static enums:ScheduleType.Once}}"/>

            <!-- Period for daily, weekly or monthly schedule type -->
            <StackPanel Grid.Row="1" Visibility="{Binding Schedule.IsDateRange, Converter={StaticResource BVConverter}}" Margin="0 5 0 0">
                <!-- Date from -->
                <DatePicker SelectedDate="{Binding DateFrom}"
                            materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_DateFrom}"/>

                <!-- Date until -->
                <DatePicker SelectedDate="{Binding DateUntil}"
                            materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding General_DateUntil}"/>
            </StackPanel>

            <!-- Settings for daily schedule type -->
            <Grid Grid.Row="2" Visibility="{Binding Schedule.ScheduleType, Converter={StaticResource EVConverter}, 
                    ConverterParameter={x:Static enums:ScheduleType.Daily}}">
                <!-- Period -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                    <iconPacks:PackIconModern Kind="TimerForward" Style="{DynamicResource TextBoxIconStyle}"/>
                    <TextBox materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding Schedule_RepetitionPeriod_Daily}"
                                     Text="{Binding Schedule.Period, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True, StringFormat={}{0:0}}"/>
                </StackPanel>
            </Grid>

            <!-- Settings for weekly schedule type -->
            <Grid Grid.Row="2" Visibility="{Binding Schedule.ScheduleType, Converter={StaticResource EVConverter}, 
                    ConverterParameter={x:Static enums:ScheduleType.Weekly}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Period -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Grid.Row="0" VerticalAlignment="Top">
                    <iconPacks:PackIconModern Kind="TimerForward" Style="{DynamicResource TextBoxIconStyle}"/>
                    <TextBox materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding Schedule_RepetitionPeriod_Weekly}"
                                     Text="{Binding Schedule.Period, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True, StringFormat={}{0:0}}"/>
                </StackPanel>

                <!-- Days of week -->
                <ItemsControl x:Name="DaysOfWeekControl" Grid.IsSharedSizeScope="True" Grid.Row="1" Margin="15 5 0 5">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type viewModel:SelectableViewModel}">
                            <Border x:Name="Border">
                                <CheckBox VerticalAlignment="Center" Content="{Binding Description}"
                                          IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" 
                                          Checked="DayOfWeek_CheckChanged" Unchecked="DayOfWeek_CheckChanged"/>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>

            <!-- Settings for monthly schedule type -->
            <Grid Grid.Row="2" Visibility="{Binding Schedule.ScheduleType, Converter={StaticResource EVConverter}, 
                    ConverterParameter={x:Static enums:ScheduleType.Monthly}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Day of month -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Grid.Row="0" VerticalAlignment="Top">
                    <iconPacks:PackIconMaterial Kind="CalendarToday" Style="{DynamicResource TextBoxIconStyle}"/>
                    <ComboBox x:Name="comboDaysOfMonth" Background="{DynamicResource WhiteBrush}"
                                  materialDesign:HintAssist.Hint="{moneyChestView:MultiLangBinding Schedule_DayOfMonth}"
                                  DisplayMemberPath="Description" SelectedValuePath="Value" SelectedValue="{Binding Schedule.DayOfMonth}"/>
                </StackPanel>

                <!-- Monthes -->
                <ItemsControl x:Name="MonthesControl" Grid.IsSharedSizeScope="True" Grid.Row="1" Margin="15 5 0 5">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type viewModel:SelectableViewModel}">
                            <Border x:Name="Border">
                                <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsSelected}" Content="{Binding Description}"
                                              Checked="Month_CheckChanged" Unchecked="Month_CheckChanged"/>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </Grid>
    </GroupBox>
</UserControl>
